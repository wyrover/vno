// This file has been generated by Py++.

#include "boost/python.hpp"

#include "boost/python/suite/indexing/vector_indexing_suite.hpp"

#include "chg.h"

namespace bp = boost::python;

BOOST_PYTHON_MODULE(PyArx){
    { //::std::vector< std::string >
        typedef bp::class_< std::vector< std::string > > vector_less__std_scope_string__greater__exposer_t;
        vector_less__std_scope_string__greater__exposer_t vector_less__std_scope_string__greater__exposer = vector_less__std_scope_string__greater__exposer_t( "vector_less__std_scope_string__greater_" );
        bp::scope vector_less__std_scope_string__greater__scope( vector_less__std_scope_string__greater__exposer );
        vector_less__std_scope_string__greater__exposer.def( bp::vector_indexing_suite< ::std::vector< std::string >, true >() );
    }

    bp::class_< Chg >( "Chg", bp::init< >() )    
        .def( 
            "friendSize"
            , (int ( ::Chg::* )(  ) )( &::Chg::friendSize ) )    
        .def( 
            "getAge"
            , (int ( ::Chg::* )(  ) )( &::Chg::getAge ) )    
        .def_readwrite( "m_age", &Chg::m_age )    
        .def_readwrite( "m_friend", &Chg::m_friend );

    { //::haha
    
        typedef void ( *haha_function_type )(  );
        
        bp::def( 
            "haha"
            , haha_function_type( &::haha ) );
    
    }

    { //::py_acutPrintf
    
        typedef void ( *py_acutPrintf_function_type )( ::std::string const & );
        
        bp::def( 
            "py_acutPrintf"
            , py_acutPrintf_function_type( &::py_acutPrintf )
            , ( bp::arg("msg") ) );
    
    }
}
