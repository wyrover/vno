// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "CbmService.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/server/TSimpleServer.h>
#include <thrift/transport/TServerSocket.h>
#include <thrift/transport/TBufferTransports.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;
using namespace ::apache::thrift::server;

using boost::shared_ptr;

using namespace  ::cbm;

class CbmServiceHandler : virtual public CbmServiceIf {
 public:
  CbmServiceHandler() {
    // Your initialization goes here
  }

  int32_t AddAccount(const Account& account) {
    // Your implementation goes here
    printf("AddAccount\n");
  }

  bool DeleteAccount(const int32_t id) {
    // Your implementation goes here
    printf("DeleteAccount\n");
  }

  bool UpdateAccount(const Account& account) {
    // Your implementation goes here
    printf("UpdateAccount\n");
  }

  void GetAccountById(Account& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetAccountById\n");
  }

  void GetAccountByForeignKey(Account& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetAccountByForeignKey\n");
  }

  int32_t GetAccountIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetAccountIdByForeignKey\n");
  }

  void GetAccountList(std::vector<Account> & _return) {
    // Your implementation goes here
    printf("GetAccountList\n");
  }

  void GetAccountIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetAccountIds\n");
  }

  void GetAccountNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetAccountNames\n");
  }

  void AddMoreAccount(const std::vector<Account> & objs) {
    // Your implementation goes here
    printf("AddMoreAccount\n");
  }

  void DeleteMoreAccount(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreAccount\n");
  }

  void GetAccountByFields(Account& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetAccountByFields\n");
  }

  void GetAccountByField1(Account& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetAccountByField1\n");
  }

  void GetAccountByField2(Account& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetAccountByField2\n");
  }

  void GetAccountListByFields(std::vector<Account> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetAccountListByFields\n");
  }

  void GetAccountListByField1(std::vector<Account> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetAccountListByField1\n");
  }

  void GetAccountListByField2(std::vector<Account> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetAccountListByField2\n");
  }

  int32_t GetAccountIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetAccountIdByFields\n");
  }

  int32_t GetAccountIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetAccountIdByField1\n");
  }

  int32_t GetAccountIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetAccountIdByField2\n");
  }

  void GetAccountIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetAccountIdListByFields\n");
  }

  void GetAccountIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetAccountIdListByField1\n");
  }

  void GetAccountIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetAccountIdListByField2\n");
  }

  void GetAccountListByForeignKey(std::vector<Account> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetAccountListByForeignKey\n");
  }

  void GetAccountIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetAccountIdListByForeignKey\n");
  }

  int32_t AddAdjLayer(const AdjLayer& adj_layer) {
    // Your implementation goes here
    printf("AddAdjLayer\n");
  }

  bool DeleteAdjLayer(const int32_t id) {
    // Your implementation goes here
    printf("DeleteAdjLayer\n");
  }

  bool UpdateAdjLayer(const AdjLayer& adj_layer) {
    // Your implementation goes here
    printf("UpdateAdjLayer\n");
  }

  void GetAdjLayerById(AdjLayer& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetAdjLayerById\n");
  }

  void GetAdjLayerByForeignKey(AdjLayer& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetAdjLayerByForeignKey\n");
  }

  int32_t GetAdjLayerIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetAdjLayerIdByForeignKey\n");
  }

  void GetAdjLayerList(std::vector<AdjLayer> & _return) {
    // Your implementation goes here
    printf("GetAdjLayerList\n");
  }

  void GetAdjLayerIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetAdjLayerIds\n");
  }

  void GetAdjLayerNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetAdjLayerNames\n");
  }

  void AddMoreAdjLayer(const std::vector<AdjLayer> & objs) {
    // Your implementation goes here
    printf("AddMoreAdjLayer\n");
  }

  void DeleteMoreAdjLayer(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreAdjLayer\n");
  }

  void GetAdjLayerByFields(AdjLayer& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetAdjLayerByFields\n");
  }

  void GetAdjLayerByField1(AdjLayer& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetAdjLayerByField1\n");
  }

  void GetAdjLayerByField2(AdjLayer& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetAdjLayerByField2\n");
  }

  void GetAdjLayerListByFields(std::vector<AdjLayer> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetAdjLayerListByFields\n");
  }

  void GetAdjLayerListByField1(std::vector<AdjLayer> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetAdjLayerListByField1\n");
  }

  void GetAdjLayerListByField2(std::vector<AdjLayer> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetAdjLayerListByField2\n");
  }

  int32_t GetAdjLayerIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetAdjLayerIdByFields\n");
  }

  int32_t GetAdjLayerIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetAdjLayerIdByField1\n");
  }

  int32_t GetAdjLayerIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetAdjLayerIdByField2\n");
  }

  void GetAdjLayerIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetAdjLayerIdListByFields\n");
  }

  void GetAdjLayerIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetAdjLayerIdListByField1\n");
  }

  void GetAdjLayerIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetAdjLayerIdListByField2\n");
  }

  void GetAdjLayerListByForeignKey(std::vector<AdjLayer> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetAdjLayerListByForeignKey\n");
  }

  void GetAdjLayerIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetAdjLayerIdListByForeignKey\n");
  }

  int32_t AddCoal(const Coal& coal) {
    // Your implementation goes here
    printf("AddCoal\n");
  }

  bool DeleteCoal(const int32_t id) {
    // Your implementation goes here
    printf("DeleteCoal\n");
  }

  bool UpdateCoal(const Coal& coal) {
    // Your implementation goes here
    printf("UpdateCoal\n");
  }

  void GetCoalById(Coal& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetCoalById\n");
  }

  void GetCoalByForeignKey(Coal& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetCoalByForeignKey\n");
  }

  int32_t GetCoalIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetCoalIdByForeignKey\n");
  }

  void GetCoalList(std::vector<Coal> & _return) {
    // Your implementation goes here
    printf("GetCoalList\n");
  }

  void GetCoalIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetCoalIds\n");
  }

  void GetCoalNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetCoalNames\n");
  }

  void AddMoreCoal(const std::vector<Coal> & objs) {
    // Your implementation goes here
    printf("AddMoreCoal\n");
  }

  void DeleteMoreCoal(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreCoal\n");
  }

  void GetCoalByFields(Coal& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetCoalByFields\n");
  }

  void GetCoalByField1(Coal& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetCoalByField1\n");
  }

  void GetCoalByField2(Coal& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetCoalByField2\n");
  }

  void GetCoalListByFields(std::vector<Coal> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetCoalListByFields\n");
  }

  void GetCoalListByField1(std::vector<Coal> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetCoalListByField1\n");
  }

  void GetCoalListByField2(std::vector<Coal> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetCoalListByField2\n");
  }

  int32_t GetCoalIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetCoalIdByFields\n");
  }

  int32_t GetCoalIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetCoalIdByField1\n");
  }

  int32_t GetCoalIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetCoalIdByField2\n");
  }

  void GetCoalIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetCoalIdListByFields\n");
  }

  void GetCoalIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetCoalIdListByField1\n");
  }

  void GetCoalIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetCoalIdListByField2\n");
  }

  void GetCoalListByForeignKey(std::vector<Coal> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetCoalListByForeignKey\n");
  }

  void GetCoalIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetCoalIdListByForeignKey\n");
  }

  int32_t AddComplexity(const Complexity& complexity) {
    // Your implementation goes here
    printf("AddComplexity\n");
  }

  bool DeleteComplexity(const int32_t id) {
    // Your implementation goes here
    printf("DeleteComplexity\n");
  }

  bool UpdateComplexity(const Complexity& complexity) {
    // Your implementation goes here
    printf("UpdateComplexity\n");
  }

  void GetComplexityById(Complexity& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetComplexityById\n");
  }

  void GetComplexityByForeignKey(Complexity& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetComplexityByForeignKey\n");
  }

  int32_t GetComplexityIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetComplexityIdByForeignKey\n");
  }

  void GetComplexityList(std::vector<Complexity> & _return) {
    // Your implementation goes here
    printf("GetComplexityList\n");
  }

  void GetComplexityIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetComplexityIds\n");
  }

  void GetComplexityNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetComplexityNames\n");
  }

  void AddMoreComplexity(const std::vector<Complexity> & objs) {
    // Your implementation goes here
    printf("AddMoreComplexity\n");
  }

  void DeleteMoreComplexity(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreComplexity\n");
  }

  void GetComplexityByFields(Complexity& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetComplexityByFields\n");
  }

  void GetComplexityByField1(Complexity& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetComplexityByField1\n");
  }

  void GetComplexityByField2(Complexity& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetComplexityByField2\n");
  }

  void GetComplexityListByFields(std::vector<Complexity> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetComplexityListByFields\n");
  }

  void GetComplexityListByField1(std::vector<Complexity> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetComplexityListByField1\n");
  }

  void GetComplexityListByField2(std::vector<Complexity> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetComplexityListByField2\n");
  }

  int32_t GetComplexityIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetComplexityIdByFields\n");
  }

  int32_t GetComplexityIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetComplexityIdByField1\n");
  }

  int32_t GetComplexityIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetComplexityIdByField2\n");
  }

  void GetComplexityIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetComplexityIdListByFields\n");
  }

  void GetComplexityIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetComplexityIdListByField1\n");
  }

  void GetComplexityIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetComplexityIdListByField2\n");
  }

  void GetComplexityListByForeignKey(std::vector<Complexity> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetComplexityListByForeignKey\n");
  }

  void GetComplexityIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetComplexityIdListByForeignKey\n");
  }

  int32_t AddDesignDrillingSurfTechnology(const DesignDrillingSurfTechnology& design_drilling_surf_technology) {
    // Your implementation goes here
    printf("AddDesignDrillingSurfTechnology\n");
  }

  bool DeleteDesignDrillingSurfTechnology(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignDrillingSurfTechnology\n");
  }

  bool UpdateDesignDrillingSurfTechnology(const DesignDrillingSurfTechnology& design_drilling_surf_technology) {
    // Your implementation goes here
    printf("UpdateDesignDrillingSurfTechnology\n");
  }

  void GetDesignDrillingSurfTechnologyById(DesignDrillingSurfTechnology& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyById\n");
  }

  void GetDesignDrillingSurfTechnologyByForeignKey(DesignDrillingSurfTechnology& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyByForeignKey\n");
  }

  int32_t GetDesignDrillingSurfTechnologyIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyIdByForeignKey\n");
  }

  void GetDesignDrillingSurfTechnologyList(std::vector<DesignDrillingSurfTechnology> & _return) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyList\n");
  }

  void GetDesignDrillingSurfTechnologyIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyIds\n");
  }

  void GetDesignDrillingSurfTechnologyNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyNames\n");
  }

  void AddMoreDesignDrillingSurfTechnology(const std::vector<DesignDrillingSurfTechnology> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignDrillingSurfTechnology\n");
  }

  void DeleteMoreDesignDrillingSurfTechnology(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignDrillingSurfTechnology\n");
  }

  void GetDesignDrillingSurfTechnologyByFields(DesignDrillingSurfTechnology& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyByFields\n");
  }

  void GetDesignDrillingSurfTechnologyByField1(DesignDrillingSurfTechnology& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyByField1\n");
  }

  void GetDesignDrillingSurfTechnologyByField2(DesignDrillingSurfTechnology& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyByField2\n");
  }

  void GetDesignDrillingSurfTechnologyListByFields(std::vector<DesignDrillingSurfTechnology> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyListByFields\n");
  }

  void GetDesignDrillingSurfTechnologyListByField1(std::vector<DesignDrillingSurfTechnology> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyListByField1\n");
  }

  void GetDesignDrillingSurfTechnologyListByField2(std::vector<DesignDrillingSurfTechnology> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyListByField2\n");
  }

  int32_t GetDesignDrillingSurfTechnologyIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyIdByFields\n");
  }

  int32_t GetDesignDrillingSurfTechnologyIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyIdByField1\n");
  }

  int32_t GetDesignDrillingSurfTechnologyIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyIdByField2\n");
  }

  void GetDesignDrillingSurfTechnologyIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyIdListByFields\n");
  }

  void GetDesignDrillingSurfTechnologyIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyIdListByField1\n");
  }

  void GetDesignDrillingSurfTechnologyIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyIdListByField2\n");
  }

  void GetDesignDrillingSurfTechnologyListByForeignKey(std::vector<DesignDrillingSurfTechnology> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyListByForeignKey\n");
  }

  void GetDesignDrillingSurfTechnologyIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyIdListByForeignKey\n");
  }

  int32_t AddDesignEvalUnit(const DesignEvalUnit& design_eval_unit) {
    // Your implementation goes here
    printf("AddDesignEvalUnit\n");
  }

  bool DeleteDesignEvalUnit(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignEvalUnit\n");
  }

  bool UpdateDesignEvalUnit(const DesignEvalUnit& design_eval_unit) {
    // Your implementation goes here
    printf("UpdateDesignEvalUnit\n");
  }

  void GetDesignEvalUnitById(DesignEvalUnit& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignEvalUnitById\n");
  }

  void GetDesignEvalUnitByForeignKey(DesignEvalUnit& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignEvalUnitByForeignKey\n");
  }

  int32_t GetDesignEvalUnitIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignEvalUnitIdByForeignKey\n");
  }

  void GetDesignEvalUnitList(std::vector<DesignEvalUnit> & _return) {
    // Your implementation goes here
    printf("GetDesignEvalUnitList\n");
  }

  void GetDesignEvalUnitIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignEvalUnitIds\n");
  }

  void GetDesignEvalUnitNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignEvalUnitNames\n");
  }

  void AddMoreDesignEvalUnit(const std::vector<DesignEvalUnit> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignEvalUnit\n");
  }

  void DeleteMoreDesignEvalUnit(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignEvalUnit\n");
  }

  void GetDesignEvalUnitByFields(DesignEvalUnit& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignEvalUnitByFields\n");
  }

  void GetDesignEvalUnitByField1(DesignEvalUnit& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignEvalUnitByField1\n");
  }

  void GetDesignEvalUnitByField2(DesignEvalUnit& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignEvalUnitByField2\n");
  }

  void GetDesignEvalUnitListByFields(std::vector<DesignEvalUnit> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignEvalUnitListByFields\n");
  }

  void GetDesignEvalUnitListByField1(std::vector<DesignEvalUnit> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignEvalUnitListByField1\n");
  }

  void GetDesignEvalUnitListByField2(std::vector<DesignEvalUnit> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignEvalUnitListByField2\n");
  }

  int32_t GetDesignEvalUnitIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignEvalUnitIdByFields\n");
  }

  int32_t GetDesignEvalUnitIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignEvalUnitIdByField1\n");
  }

  int32_t GetDesignEvalUnitIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignEvalUnitIdByField2\n");
  }

  void GetDesignEvalUnitIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignEvalUnitIdListByFields\n");
  }

  void GetDesignEvalUnitIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignEvalUnitIdListByField1\n");
  }

  void GetDesignEvalUnitIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignEvalUnitIdListByField2\n");
  }

  void GetDesignEvalUnitListByForeignKey(std::vector<DesignEvalUnit> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignEvalUnitListByForeignKey\n");
  }

  void GetDesignEvalUnitIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignEvalUnitIdListByForeignKey\n");
  }

  int32_t AddDesignEvalUnitPartition(const DesignEvalUnitPartition& design_eval_unit_partition) {
    // Your implementation goes here
    printf("AddDesignEvalUnitPartition\n");
  }

  bool DeleteDesignEvalUnitPartition(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignEvalUnitPartition\n");
  }

  bool UpdateDesignEvalUnitPartition(const DesignEvalUnitPartition& design_eval_unit_partition) {
    // Your implementation goes here
    printf("UpdateDesignEvalUnitPartition\n");
  }

  void GetDesignEvalUnitPartitionById(DesignEvalUnitPartition& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionById\n");
  }

  void GetDesignEvalUnitPartitionByForeignKey(DesignEvalUnitPartition& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionByForeignKey\n");
  }

  int32_t GetDesignEvalUnitPartitionIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionIdByForeignKey\n");
  }

  void GetDesignEvalUnitPartitionList(std::vector<DesignEvalUnitPartition> & _return) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionList\n");
  }

  void GetDesignEvalUnitPartitionIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionIds\n");
  }

  void GetDesignEvalUnitPartitionNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionNames\n");
  }

  void AddMoreDesignEvalUnitPartition(const std::vector<DesignEvalUnitPartition> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignEvalUnitPartition\n");
  }

  void DeleteMoreDesignEvalUnitPartition(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignEvalUnitPartition\n");
  }

  void GetDesignEvalUnitPartitionByFields(DesignEvalUnitPartition& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionByFields\n");
  }

  void GetDesignEvalUnitPartitionByField1(DesignEvalUnitPartition& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionByField1\n");
  }

  void GetDesignEvalUnitPartitionByField2(DesignEvalUnitPartition& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionByField2\n");
  }

  void GetDesignEvalUnitPartitionListByFields(std::vector<DesignEvalUnitPartition> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionListByFields\n");
  }

  void GetDesignEvalUnitPartitionListByField1(std::vector<DesignEvalUnitPartition> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionListByField1\n");
  }

  void GetDesignEvalUnitPartitionListByField2(std::vector<DesignEvalUnitPartition> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionListByField2\n");
  }

  int32_t GetDesignEvalUnitPartitionIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionIdByFields\n");
  }

  int32_t GetDesignEvalUnitPartitionIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionIdByField1\n");
  }

  int32_t GetDesignEvalUnitPartitionIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionIdByField2\n");
  }

  void GetDesignEvalUnitPartitionIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionIdListByFields\n");
  }

  void GetDesignEvalUnitPartitionIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionIdListByField1\n");
  }

  void GetDesignEvalUnitPartitionIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionIdListByField2\n");
  }

  void GetDesignEvalUnitPartitionListByForeignKey(std::vector<DesignEvalUnitPartition> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionListByForeignKey\n");
  }

  void GetDesignEvalUnitPartitionIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignEvalUnitPartitionIdListByForeignKey\n");
  }

  int32_t AddDesignGoafPore(const DesignGoafPore& design_goaf_pore) {
    // Your implementation goes here
    printf("AddDesignGoafPore\n");
  }

  bool DeleteDesignGoafPore(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignGoafPore\n");
  }

  bool UpdateDesignGoafPore(const DesignGoafPore& design_goaf_pore) {
    // Your implementation goes here
    printf("UpdateDesignGoafPore\n");
  }

  void GetDesignGoafPoreById(DesignGoafPore& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignGoafPoreById\n");
  }

  void GetDesignGoafPoreByForeignKey(DesignGoafPore& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignGoafPoreByForeignKey\n");
  }

  int32_t GetDesignGoafPoreIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignGoafPoreIdByForeignKey\n");
  }

  void GetDesignGoafPoreList(std::vector<DesignGoafPore> & _return) {
    // Your implementation goes here
    printf("GetDesignGoafPoreList\n");
  }

  void GetDesignGoafPoreIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignGoafPoreIds\n");
  }

  void GetDesignGoafPoreNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignGoafPoreNames\n");
  }

  void AddMoreDesignGoafPore(const std::vector<DesignGoafPore> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignGoafPore\n");
  }

  void DeleteMoreDesignGoafPore(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignGoafPore\n");
  }

  void GetDesignGoafPoreByFields(DesignGoafPore& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignGoafPoreByFields\n");
  }

  void GetDesignGoafPoreByField1(DesignGoafPore& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignGoafPoreByField1\n");
  }

  void GetDesignGoafPoreByField2(DesignGoafPore& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignGoafPoreByField2\n");
  }

  void GetDesignGoafPoreListByFields(std::vector<DesignGoafPore> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignGoafPoreListByFields\n");
  }

  void GetDesignGoafPoreListByField1(std::vector<DesignGoafPore> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignGoafPoreListByField1\n");
  }

  void GetDesignGoafPoreListByField2(std::vector<DesignGoafPore> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignGoafPoreListByField2\n");
  }

  int32_t GetDesignGoafPoreIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignGoafPoreIdByFields\n");
  }

  int32_t GetDesignGoafPoreIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignGoafPoreIdByField1\n");
  }

  int32_t GetDesignGoafPoreIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignGoafPoreIdByField2\n");
  }

  void GetDesignGoafPoreIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignGoafPoreIdListByFields\n");
  }

  void GetDesignGoafPoreIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignGoafPoreIdListByField1\n");
  }

  void GetDesignGoafPoreIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignGoafPoreIdListByField2\n");
  }

  void GetDesignGoafPoreListByForeignKey(std::vector<DesignGoafPore> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignGoafPoreListByForeignKey\n");
  }

  void GetDesignGoafPoreIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignGoafPoreIdListByForeignKey\n");
  }

  int32_t AddDesignGoafTechnology(const DesignGoafTechnology& design_goaf_technology) {
    // Your implementation goes here
    printf("AddDesignGoafTechnology\n");
  }

  bool DeleteDesignGoafTechnology(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignGoafTechnology\n");
  }

  bool UpdateDesignGoafTechnology(const DesignGoafTechnology& design_goaf_technology) {
    // Your implementation goes here
    printf("UpdateDesignGoafTechnology\n");
  }

  void GetDesignGoafTechnologyById(DesignGoafTechnology& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyById\n");
  }

  void GetDesignGoafTechnologyByForeignKey(DesignGoafTechnology& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyByForeignKey\n");
  }

  int32_t GetDesignGoafTechnologyIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyIdByForeignKey\n");
  }

  void GetDesignGoafTechnologyList(std::vector<DesignGoafTechnology> & _return) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyList\n");
  }

  void GetDesignGoafTechnologyIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyIds\n");
  }

  void GetDesignGoafTechnologyNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyNames\n");
  }

  void AddMoreDesignGoafTechnology(const std::vector<DesignGoafTechnology> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignGoafTechnology\n");
  }

  void DeleteMoreDesignGoafTechnology(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignGoafTechnology\n");
  }

  void GetDesignGoafTechnologyByFields(DesignGoafTechnology& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyByFields\n");
  }

  void GetDesignGoafTechnologyByField1(DesignGoafTechnology& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyByField1\n");
  }

  void GetDesignGoafTechnologyByField2(DesignGoafTechnology& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyByField2\n");
  }

  void GetDesignGoafTechnologyListByFields(std::vector<DesignGoafTechnology> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyListByFields\n");
  }

  void GetDesignGoafTechnologyListByField1(std::vector<DesignGoafTechnology> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyListByField1\n");
  }

  void GetDesignGoafTechnologyListByField2(std::vector<DesignGoafTechnology> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyListByField2\n");
  }

  int32_t GetDesignGoafTechnologyIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyIdByFields\n");
  }

  int32_t GetDesignGoafTechnologyIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyIdByField1\n");
  }

  int32_t GetDesignGoafTechnologyIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyIdByField2\n");
  }

  void GetDesignGoafTechnologyIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyIdListByFields\n");
  }

  void GetDesignGoafTechnologyIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyIdListByField1\n");
  }

  void GetDesignGoafTechnologyIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyIdListByField2\n");
  }

  void GetDesignGoafTechnologyListByForeignKey(std::vector<DesignGoafTechnology> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyListByForeignKey\n");
  }

  void GetDesignGoafTechnologyIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyIdListByForeignKey\n");
  }

  int32_t AddDesignPore(const DesignPore& design_pore) {
    // Your implementation goes here
    printf("AddDesignPore\n");
  }

  bool DeleteDesignPore(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignPore\n");
  }

  bool UpdateDesignPore(const DesignPore& design_pore) {
    // Your implementation goes here
    printf("UpdateDesignPore\n");
  }

  void GetDesignPoreById(DesignPore& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignPoreById\n");
  }

  void GetDesignPoreByForeignKey(DesignPore& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignPoreByForeignKey\n");
  }

  int32_t GetDesignPoreIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignPoreIdByForeignKey\n");
  }

  void GetDesignPoreList(std::vector<DesignPore> & _return) {
    // Your implementation goes here
    printf("GetDesignPoreList\n");
  }

  void GetDesignPoreIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignPoreIds\n");
  }

  void GetDesignPoreNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignPoreNames\n");
  }

  void AddMoreDesignPore(const std::vector<DesignPore> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignPore\n");
  }

  void DeleteMoreDesignPore(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignPore\n");
  }

  void GetDesignPoreByFields(DesignPore& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignPoreByFields\n");
  }

  void GetDesignPoreByField1(DesignPore& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignPoreByField1\n");
  }

  void GetDesignPoreByField2(DesignPore& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignPoreByField2\n");
  }

  void GetDesignPoreListByFields(std::vector<DesignPore> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignPoreListByFields\n");
  }

  void GetDesignPoreListByField1(std::vector<DesignPore> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignPoreListByField1\n");
  }

  void GetDesignPoreListByField2(std::vector<DesignPore> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignPoreListByField2\n");
  }

  int32_t GetDesignPoreIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignPoreIdByFields\n");
  }

  int32_t GetDesignPoreIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignPoreIdByField1\n");
  }

  int32_t GetDesignPoreIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignPoreIdByField2\n");
  }

  void GetDesignPoreIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignPoreIdListByFields\n");
  }

  void GetDesignPoreIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignPoreIdListByField1\n");
  }

  void GetDesignPoreIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignPoreIdListByField2\n");
  }

  void GetDesignPoreListByForeignKey(std::vector<DesignPore> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignPoreListByForeignKey\n");
  }

  void GetDesignPoreIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignPoreIdListByForeignKey\n");
  }

  int32_t AddDesignSite(const DesignSite& design_site) {
    // Your implementation goes here
    printf("AddDesignSite\n");
  }

  bool DeleteDesignSite(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignSite\n");
  }

  bool UpdateDesignSite(const DesignSite& design_site) {
    // Your implementation goes here
    printf("UpdateDesignSite\n");
  }

  void GetDesignSiteById(DesignSite& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignSiteById\n");
  }

  void GetDesignSiteByForeignKey(DesignSite& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignSiteByForeignKey\n");
  }

  int32_t GetDesignSiteIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignSiteIdByForeignKey\n");
  }

  void GetDesignSiteList(std::vector<DesignSite> & _return) {
    // Your implementation goes here
    printf("GetDesignSiteList\n");
  }

  void GetDesignSiteIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignSiteIds\n");
  }

  void GetDesignSiteNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignSiteNames\n");
  }

  void AddMoreDesignSite(const std::vector<DesignSite> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignSite\n");
  }

  void DeleteMoreDesignSite(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignSite\n");
  }

  void GetDesignSiteByFields(DesignSite& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignSiteByFields\n");
  }

  void GetDesignSiteByField1(DesignSite& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignSiteByField1\n");
  }

  void GetDesignSiteByField2(DesignSite& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignSiteByField2\n");
  }

  void GetDesignSiteListByFields(std::vector<DesignSite> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignSiteListByFields\n");
  }

  void GetDesignSiteListByField1(std::vector<DesignSite> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignSiteListByField1\n");
  }

  void GetDesignSiteListByField2(std::vector<DesignSite> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignSiteListByField2\n");
  }

  int32_t GetDesignSiteIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignSiteIdByFields\n");
  }

  int32_t GetDesignSiteIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignSiteIdByField1\n");
  }

  int32_t GetDesignSiteIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignSiteIdByField2\n");
  }

  void GetDesignSiteIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignSiteIdListByFields\n");
  }

  void GetDesignSiteIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignSiteIdListByField1\n");
  }

  void GetDesignSiteIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignSiteIdListByField2\n");
  }

  void GetDesignSiteListByForeignKey(std::vector<DesignSite> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignSiteListByForeignKey\n");
  }

  void GetDesignSiteIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignSiteIdListByForeignKey\n");
  }

  int32_t AddDesignTechnology(const DesignTechnology& design_technology) {
    // Your implementation goes here
    printf("AddDesignTechnology\n");
  }

  bool DeleteDesignTechnology(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignTechnology\n");
  }

  bool UpdateDesignTechnology(const DesignTechnology& design_technology) {
    // Your implementation goes here
    printf("UpdateDesignTechnology\n");
  }

  void GetDesignTechnologyById(DesignTechnology& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignTechnologyById\n");
  }

  void GetDesignTechnologyByForeignKey(DesignTechnology& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignTechnologyByForeignKey\n");
  }

  int32_t GetDesignTechnologyIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignTechnologyIdByForeignKey\n");
  }

  void GetDesignTechnologyList(std::vector<DesignTechnology> & _return) {
    // Your implementation goes here
    printf("GetDesignTechnologyList\n");
  }

  void GetDesignTechnologyIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignTechnologyIds\n");
  }

  void GetDesignTechnologyNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignTechnologyNames\n");
  }

  void AddMoreDesignTechnology(const std::vector<DesignTechnology> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignTechnology\n");
  }

  void DeleteMoreDesignTechnology(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignTechnology\n");
  }

  void GetDesignTechnologyByFields(DesignTechnology& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignTechnologyByFields\n");
  }

  void GetDesignTechnologyByField1(DesignTechnology& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignTechnologyByField1\n");
  }

  void GetDesignTechnologyByField2(DesignTechnology& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignTechnologyByField2\n");
  }

  void GetDesignTechnologyListByFields(std::vector<DesignTechnology> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignTechnologyListByFields\n");
  }

  void GetDesignTechnologyListByField1(std::vector<DesignTechnology> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignTechnologyListByField1\n");
  }

  void GetDesignTechnologyListByField2(std::vector<DesignTechnology> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignTechnologyListByField2\n");
  }

  int32_t GetDesignTechnologyIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignTechnologyIdByFields\n");
  }

  int32_t GetDesignTechnologyIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignTechnologyIdByField1\n");
  }

  int32_t GetDesignTechnologyIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignTechnologyIdByField2\n");
  }

  void GetDesignTechnologyIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignTechnologyIdListByFields\n");
  }

  void GetDesignTechnologyIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignTechnologyIdListByField1\n");
  }

  void GetDesignTechnologyIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignTechnologyIdListByField2\n");
  }

  void GetDesignTechnologyListByForeignKey(std::vector<DesignTechnology> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignTechnologyListByForeignKey\n");
  }

  void GetDesignTechnologyIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignTechnologyIdListByForeignKey\n");
  }

  int32_t AddDesignTunnelControlPoint(const DesignTunnelControlPoint& design_tunnel_control_point) {
    // Your implementation goes here
    printf("AddDesignTunnelControlPoint\n");
  }

  bool DeleteDesignTunnelControlPoint(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignTunnelControlPoint\n");
  }

  bool UpdateDesignTunnelControlPoint(const DesignTunnelControlPoint& design_tunnel_control_point) {
    // Your implementation goes here
    printf("UpdateDesignTunnelControlPoint\n");
  }

  void GetDesignTunnelControlPointById(DesignTunnelControlPoint& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointById\n");
  }

  void GetDesignTunnelControlPointByForeignKey(DesignTunnelControlPoint& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointByForeignKey\n");
  }

  int32_t GetDesignTunnelControlPointIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointIdByForeignKey\n");
  }

  void GetDesignTunnelControlPointList(std::vector<DesignTunnelControlPoint> & _return) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointList\n");
  }

  void GetDesignTunnelControlPointIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointIds\n");
  }

  void GetDesignTunnelControlPointNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointNames\n");
  }

  void AddMoreDesignTunnelControlPoint(const std::vector<DesignTunnelControlPoint> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignTunnelControlPoint\n");
  }

  void DeleteMoreDesignTunnelControlPoint(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignTunnelControlPoint\n");
  }

  void GetDesignTunnelControlPointByFields(DesignTunnelControlPoint& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointByFields\n");
  }

  void GetDesignTunnelControlPointByField1(DesignTunnelControlPoint& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointByField1\n");
  }

  void GetDesignTunnelControlPointByField2(DesignTunnelControlPoint& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointByField2\n");
  }

  void GetDesignTunnelControlPointListByFields(std::vector<DesignTunnelControlPoint> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointListByFields\n");
  }

  void GetDesignTunnelControlPointListByField1(std::vector<DesignTunnelControlPoint> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointListByField1\n");
  }

  void GetDesignTunnelControlPointListByField2(std::vector<DesignTunnelControlPoint> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointListByField2\n");
  }

  int32_t GetDesignTunnelControlPointIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointIdByFields\n");
  }

  int32_t GetDesignTunnelControlPointIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointIdByField1\n");
  }

  int32_t GetDesignTunnelControlPointIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointIdByField2\n");
  }

  void GetDesignTunnelControlPointIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointIdListByFields\n");
  }

  void GetDesignTunnelControlPointIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointIdListByField1\n");
  }

  void GetDesignTunnelControlPointIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointIdListByField2\n");
  }

  void GetDesignTunnelControlPointListByForeignKey(std::vector<DesignTunnelControlPoint> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointListByForeignKey\n");
  }

  void GetDesignTunnelControlPointIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignTunnelControlPointIdListByForeignKey\n");
  }

  int32_t AddDesignWorkSurfControlPoint(const DesignWorkSurfControlPoint& design_work_surf_control_point) {
    // Your implementation goes here
    printf("AddDesignWorkSurfControlPoint\n");
  }

  bool DeleteDesignWorkSurfControlPoint(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignWorkSurfControlPoint\n");
  }

  bool UpdateDesignWorkSurfControlPoint(const DesignWorkSurfControlPoint& design_work_surf_control_point) {
    // Your implementation goes here
    printf("UpdateDesignWorkSurfControlPoint\n");
  }

  void GetDesignWorkSurfControlPointById(DesignWorkSurfControlPoint& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointById\n");
  }

  void GetDesignWorkSurfControlPointByForeignKey(DesignWorkSurfControlPoint& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointByForeignKey\n");
  }

  int32_t GetDesignWorkSurfControlPointIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointIdByForeignKey\n");
  }

  void GetDesignWorkSurfControlPointList(std::vector<DesignWorkSurfControlPoint> & _return) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointList\n");
  }

  void GetDesignWorkSurfControlPointIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointIds\n");
  }

  void GetDesignWorkSurfControlPointNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointNames\n");
  }

  void AddMoreDesignWorkSurfControlPoint(const std::vector<DesignWorkSurfControlPoint> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignWorkSurfControlPoint\n");
  }

  void DeleteMoreDesignWorkSurfControlPoint(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignWorkSurfControlPoint\n");
  }

  void GetDesignWorkSurfControlPointByFields(DesignWorkSurfControlPoint& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointByFields\n");
  }

  void GetDesignWorkSurfControlPointByField1(DesignWorkSurfControlPoint& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointByField1\n");
  }

  void GetDesignWorkSurfControlPointByField2(DesignWorkSurfControlPoint& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointByField2\n");
  }

  void GetDesignWorkSurfControlPointListByFields(std::vector<DesignWorkSurfControlPoint> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointListByFields\n");
  }

  void GetDesignWorkSurfControlPointListByField1(std::vector<DesignWorkSurfControlPoint> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointListByField1\n");
  }

  void GetDesignWorkSurfControlPointListByField2(std::vector<DesignWorkSurfControlPoint> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointListByField2\n");
  }

  int32_t GetDesignWorkSurfControlPointIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointIdByFields\n");
  }

  int32_t GetDesignWorkSurfControlPointIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointIdByField1\n");
  }

  int32_t GetDesignWorkSurfControlPointIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointIdByField2\n");
  }

  void GetDesignWorkSurfControlPointIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointIdListByFields\n");
  }

  void GetDesignWorkSurfControlPointIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointIdListByField1\n");
  }

  void GetDesignWorkSurfControlPointIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointIdListByField2\n");
  }

  void GetDesignWorkSurfControlPointListByForeignKey(std::vector<DesignWorkSurfControlPoint> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointListByForeignKey\n");
  }

  void GetDesignWorkSurfControlPointIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignWorkSurfControlPointIdListByForeignKey\n");
  }

  int32_t AddDesignWorkSurfTechnology(const DesignWorkSurfTechnology& design_work_surf_technology) {
    // Your implementation goes here
    printf("AddDesignWorkSurfTechnology\n");
  }

  bool DeleteDesignWorkSurfTechnology(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignWorkSurfTechnology\n");
  }

  bool UpdateDesignWorkSurfTechnology(const DesignWorkSurfTechnology& design_work_surf_technology) {
    // Your implementation goes here
    printf("UpdateDesignWorkSurfTechnology\n");
  }

  void GetDesignWorkSurfTechnologyById(DesignWorkSurfTechnology& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyById\n");
  }

  void GetDesignWorkSurfTechnologyByForeignKey(DesignWorkSurfTechnology& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyByForeignKey\n");
  }

  int32_t GetDesignWorkSurfTechnologyIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyIdByForeignKey\n");
  }

  void GetDesignWorkSurfTechnologyList(std::vector<DesignWorkSurfTechnology> & _return) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyList\n");
  }

  void GetDesignWorkSurfTechnologyIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyIds\n");
  }

  void GetDesignWorkSurfTechnologyNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyNames\n");
  }

  void AddMoreDesignWorkSurfTechnology(const std::vector<DesignWorkSurfTechnology> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignWorkSurfTechnology\n");
  }

  void DeleteMoreDesignWorkSurfTechnology(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignWorkSurfTechnology\n");
  }

  void GetDesignWorkSurfTechnologyByFields(DesignWorkSurfTechnology& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyByFields\n");
  }

  void GetDesignWorkSurfTechnologyByField1(DesignWorkSurfTechnology& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyByField1\n");
  }

  void GetDesignWorkSurfTechnologyByField2(DesignWorkSurfTechnology& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyByField2\n");
  }

  void GetDesignWorkSurfTechnologyListByFields(std::vector<DesignWorkSurfTechnology> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyListByFields\n");
  }

  void GetDesignWorkSurfTechnologyListByField1(std::vector<DesignWorkSurfTechnology> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyListByField1\n");
  }

  void GetDesignWorkSurfTechnologyListByField2(std::vector<DesignWorkSurfTechnology> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyListByField2\n");
  }

  int32_t GetDesignWorkSurfTechnologyIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyIdByFields\n");
  }

  int32_t GetDesignWorkSurfTechnologyIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyIdByField1\n");
  }

  int32_t GetDesignWorkSurfTechnologyIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyIdByField2\n");
  }

  void GetDesignWorkSurfTechnologyIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyIdListByFields\n");
  }

  void GetDesignWorkSurfTechnologyIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyIdListByField1\n");
  }

  void GetDesignWorkSurfTechnologyIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyIdListByField2\n");
  }

  void GetDesignWorkSurfTechnologyListByForeignKey(std::vector<DesignWorkSurfTechnology> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyListByForeignKey\n");
  }

  void GetDesignWorkSurfTechnologyIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyIdListByForeignKey\n");
  }

  int32_t AddDrillingRadiusParam(const DrillingRadiusParam& drilling_radius_param) {
    // Your implementation goes here
    printf("AddDrillingRadiusParam\n");
  }

  bool DeleteDrillingRadiusParam(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDrillingRadiusParam\n");
  }

  bool UpdateDrillingRadiusParam(const DrillingRadiusParam& drilling_radius_param) {
    // Your implementation goes here
    printf("UpdateDrillingRadiusParam\n");
  }

  void GetDrillingRadiusParamById(DrillingRadiusParam& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamById\n");
  }

  void GetDrillingRadiusParamByForeignKey(DrillingRadiusParam& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamByForeignKey\n");
  }

  int32_t GetDrillingRadiusParamIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamIdByForeignKey\n");
  }

  void GetDrillingRadiusParamList(std::vector<DrillingRadiusParam> & _return) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamList\n");
  }

  void GetDrillingRadiusParamIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamIds\n");
  }

  void GetDrillingRadiusParamNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamNames\n");
  }

  void AddMoreDrillingRadiusParam(const std::vector<DrillingRadiusParam> & objs) {
    // Your implementation goes here
    printf("AddMoreDrillingRadiusParam\n");
  }

  void DeleteMoreDrillingRadiusParam(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDrillingRadiusParam\n");
  }

  void GetDrillingRadiusParamByFields(DrillingRadiusParam& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamByFields\n");
  }

  void GetDrillingRadiusParamByField1(DrillingRadiusParam& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamByField1\n");
  }

  void GetDrillingRadiusParamByField2(DrillingRadiusParam& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamByField2\n");
  }

  void GetDrillingRadiusParamListByFields(std::vector<DrillingRadiusParam> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamListByFields\n");
  }

  void GetDrillingRadiusParamListByField1(std::vector<DrillingRadiusParam> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamListByField1\n");
  }

  void GetDrillingRadiusParamListByField2(std::vector<DrillingRadiusParam> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamListByField2\n");
  }

  int32_t GetDrillingRadiusParamIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamIdByFields\n");
  }

  int32_t GetDrillingRadiusParamIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamIdByField1\n");
  }

  int32_t GetDrillingRadiusParamIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamIdByField2\n");
  }

  void GetDrillingRadiusParamIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamIdListByFields\n");
  }

  void GetDrillingRadiusParamIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamIdListByField1\n");
  }

  void GetDrillingRadiusParamIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamIdListByField2\n");
  }

  void GetDrillingRadiusParamListByForeignKey(std::vector<DrillingRadiusParam> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamListByForeignKey\n");
  }

  void GetDrillingRadiusParamIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamIdListByForeignKey\n");
  }

  int32_t AddDrillingSurf(const DrillingSurf& drilling_surf) {
    // Your implementation goes here
    printf("AddDrillingSurf\n");
  }

  bool DeleteDrillingSurf(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDrillingSurf\n");
  }

  bool UpdateDrillingSurf(const DrillingSurf& drilling_surf) {
    // Your implementation goes here
    printf("UpdateDrillingSurf\n");
  }

  void GetDrillingSurfById(DrillingSurf& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDrillingSurfById\n");
  }

  void GetDrillingSurfByForeignKey(DrillingSurf& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDrillingSurfByForeignKey\n");
  }

  int32_t GetDrillingSurfIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDrillingSurfIdByForeignKey\n");
  }

  void GetDrillingSurfList(std::vector<DrillingSurf> & _return) {
    // Your implementation goes here
    printf("GetDrillingSurfList\n");
  }

  void GetDrillingSurfIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDrillingSurfIds\n");
  }

  void GetDrillingSurfNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDrillingSurfNames\n");
  }

  void AddMoreDrillingSurf(const std::vector<DrillingSurf> & objs) {
    // Your implementation goes here
    printf("AddMoreDrillingSurf\n");
  }

  void DeleteMoreDrillingSurf(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDrillingSurf\n");
  }

  void GetDrillingSurfByFields(DrillingSurf& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDrillingSurfByFields\n");
  }

  void GetDrillingSurfByField1(DrillingSurf& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDrillingSurfByField1\n");
  }

  void GetDrillingSurfByField2(DrillingSurf& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDrillingSurfByField2\n");
  }

  void GetDrillingSurfListByFields(std::vector<DrillingSurf> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDrillingSurfListByFields\n");
  }

  void GetDrillingSurfListByField1(std::vector<DrillingSurf> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDrillingSurfListByField1\n");
  }

  void GetDrillingSurfListByField2(std::vector<DrillingSurf> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDrillingSurfListByField2\n");
  }

  int32_t GetDrillingSurfIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDrillingSurfIdByFields\n");
  }

  int32_t GetDrillingSurfIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDrillingSurfIdByField1\n");
  }

  int32_t GetDrillingSurfIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDrillingSurfIdByField2\n");
  }

  void GetDrillingSurfIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDrillingSurfIdListByFields\n");
  }

  void GetDrillingSurfIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDrillingSurfIdListByField1\n");
  }

  void GetDrillingSurfIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDrillingSurfIdListByField2\n");
  }

  void GetDrillingSurfListByForeignKey(std::vector<DrillingSurf> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDrillingSurfListByForeignKey\n");
  }

  void GetDrillingSurfIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDrillingSurfIdListByForeignKey\n");
  }

  int32_t AddHighDrillingPore(const HighDrillingPore& high_drilling_pore) {
    // Your implementation goes here
    printf("AddHighDrillingPore\n");
  }

  bool DeleteHighDrillingPore(const int32_t id) {
    // Your implementation goes here
    printf("DeleteHighDrillingPore\n");
  }

  bool UpdateHighDrillingPore(const HighDrillingPore& high_drilling_pore) {
    // Your implementation goes here
    printf("UpdateHighDrillingPore\n");
  }

  void GetHighDrillingPoreById(HighDrillingPore& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingPoreById\n");
  }

  void GetHighDrillingPoreByForeignKey(HighDrillingPore& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingPoreByForeignKey\n");
  }

  int32_t GetHighDrillingPoreIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingPoreIdByForeignKey\n");
  }

  void GetHighDrillingPoreList(std::vector<HighDrillingPore> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingPoreList\n");
  }

  void GetHighDrillingPoreIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingPoreIds\n");
  }

  void GetHighDrillingPoreNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingPoreNames\n");
  }

  void AddMoreHighDrillingPore(const std::vector<HighDrillingPore> & objs) {
    // Your implementation goes here
    printf("AddMoreHighDrillingPore\n");
  }

  void DeleteMoreHighDrillingPore(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreHighDrillingPore\n");
  }

  void GetHighDrillingPoreByFields(HighDrillingPore& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingPoreByFields\n");
  }

  void GetHighDrillingPoreByField1(HighDrillingPore& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingPoreByField1\n");
  }

  void GetHighDrillingPoreByField2(HighDrillingPore& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingPoreByField2\n");
  }

  void GetHighDrillingPoreListByFields(std::vector<HighDrillingPore> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingPoreListByFields\n");
  }

  void GetHighDrillingPoreListByField1(std::vector<HighDrillingPore> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingPoreListByField1\n");
  }

  void GetHighDrillingPoreListByField2(std::vector<HighDrillingPore> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingPoreListByField2\n");
  }

  int32_t GetHighDrillingPoreIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingPoreIdByFields\n");
  }

  int32_t GetHighDrillingPoreIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingPoreIdByField1\n");
  }

  int32_t GetHighDrillingPoreIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingPoreIdByField2\n");
  }

  void GetHighDrillingPoreIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingPoreIdListByFields\n");
  }

  void GetHighDrillingPoreIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingPoreIdListByField1\n");
  }

  void GetHighDrillingPoreIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingPoreIdListByField2\n");
  }

  void GetHighDrillingPoreListByForeignKey(std::vector<HighDrillingPore> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingPoreListByForeignKey\n");
  }

  void GetHighDrillingPoreIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingPoreIdListByForeignKey\n");
  }

  int32_t AddHighDrillingPoreParam(const HighDrillingPoreParam& high_drilling_pore_param) {
    // Your implementation goes here
    printf("AddHighDrillingPoreParam\n");
  }

  bool DeleteHighDrillingPoreParam(const int32_t id) {
    // Your implementation goes here
    printf("DeleteHighDrillingPoreParam\n");
  }

  bool UpdateHighDrillingPoreParam(const HighDrillingPoreParam& high_drilling_pore_param) {
    // Your implementation goes here
    printf("UpdateHighDrillingPoreParam\n");
  }

  void GetHighDrillingPoreParamById(HighDrillingPoreParam& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamById\n");
  }

  void GetHighDrillingPoreParamByForeignKey(HighDrillingPoreParam& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamByForeignKey\n");
  }

  int32_t GetHighDrillingPoreParamIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamIdByForeignKey\n");
  }

  void GetHighDrillingPoreParamList(std::vector<HighDrillingPoreParam> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamList\n");
  }

  void GetHighDrillingPoreParamIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamIds\n");
  }

  void GetHighDrillingPoreParamNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamNames\n");
  }

  void AddMoreHighDrillingPoreParam(const std::vector<HighDrillingPoreParam> & objs) {
    // Your implementation goes here
    printf("AddMoreHighDrillingPoreParam\n");
  }

  void DeleteMoreHighDrillingPoreParam(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreHighDrillingPoreParam\n");
  }

  void GetHighDrillingPoreParamByFields(HighDrillingPoreParam& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamByFields\n");
  }

  void GetHighDrillingPoreParamByField1(HighDrillingPoreParam& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamByField1\n");
  }

  void GetHighDrillingPoreParamByField2(HighDrillingPoreParam& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamByField2\n");
  }

  void GetHighDrillingPoreParamListByFields(std::vector<HighDrillingPoreParam> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamListByFields\n");
  }

  void GetHighDrillingPoreParamListByField1(std::vector<HighDrillingPoreParam> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamListByField1\n");
  }

  void GetHighDrillingPoreParamListByField2(std::vector<HighDrillingPoreParam> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamListByField2\n");
  }

  int32_t GetHighDrillingPoreParamIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamIdByFields\n");
  }

  int32_t GetHighDrillingPoreParamIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamIdByField1\n");
  }

  int32_t GetHighDrillingPoreParamIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamIdByField2\n");
  }

  void GetHighDrillingPoreParamIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamIdListByFields\n");
  }

  void GetHighDrillingPoreParamIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamIdListByField1\n");
  }

  void GetHighDrillingPoreParamIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamIdListByField2\n");
  }

  void GetHighDrillingPoreParamListByForeignKey(std::vector<HighDrillingPoreParam> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamListByForeignKey\n");
  }

  void GetHighDrillingPoreParamIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamIdListByForeignKey\n");
  }

  int32_t AddHighDrillingSiteParam(const HighDrillingSiteParam& high_drilling_site_param) {
    // Your implementation goes here
    printf("AddHighDrillingSiteParam\n");
  }

  bool DeleteHighDrillingSiteParam(const int32_t id) {
    // Your implementation goes here
    printf("DeleteHighDrillingSiteParam\n");
  }

  bool UpdateHighDrillingSiteParam(const HighDrillingSiteParam& high_drilling_site_param) {
    // Your implementation goes here
    printf("UpdateHighDrillingSiteParam\n");
  }

  void GetHighDrillingSiteParamById(HighDrillingSiteParam& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamById\n");
  }

  void GetHighDrillingSiteParamByForeignKey(HighDrillingSiteParam& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamByForeignKey\n");
  }

  int32_t GetHighDrillingSiteParamIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamIdByForeignKey\n");
  }

  void GetHighDrillingSiteParamList(std::vector<HighDrillingSiteParam> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamList\n");
  }

  void GetHighDrillingSiteParamIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamIds\n");
  }

  void GetHighDrillingSiteParamNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamNames\n");
  }

  void AddMoreHighDrillingSiteParam(const std::vector<HighDrillingSiteParam> & objs) {
    // Your implementation goes here
    printf("AddMoreHighDrillingSiteParam\n");
  }

  void DeleteMoreHighDrillingSiteParam(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreHighDrillingSiteParam\n");
  }

  void GetHighDrillingSiteParamByFields(HighDrillingSiteParam& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamByFields\n");
  }

  void GetHighDrillingSiteParamByField1(HighDrillingSiteParam& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamByField1\n");
  }

  void GetHighDrillingSiteParamByField2(HighDrillingSiteParam& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamByField2\n");
  }

  void GetHighDrillingSiteParamListByFields(std::vector<HighDrillingSiteParam> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamListByFields\n");
  }

  void GetHighDrillingSiteParamListByField1(std::vector<HighDrillingSiteParam> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamListByField1\n");
  }

  void GetHighDrillingSiteParamListByField2(std::vector<HighDrillingSiteParam> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamListByField2\n");
  }

  int32_t GetHighDrillingSiteParamIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamIdByFields\n");
  }

  int32_t GetHighDrillingSiteParamIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamIdByField1\n");
  }

  int32_t GetHighDrillingSiteParamIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamIdByField2\n");
  }

  void GetHighDrillingSiteParamIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamIdListByFields\n");
  }

  void GetHighDrillingSiteParamIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamIdListByField1\n");
  }

  void GetHighDrillingSiteParamIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamIdListByField2\n");
  }

  void GetHighDrillingSiteParamListByForeignKey(std::vector<HighDrillingSiteParam> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamListByForeignKey\n");
  }

  void GetHighDrillingSiteParamIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamIdListByForeignKey\n");
  }

  int32_t AddHighDrillingTunnel(const HighDrillingTunnel& high_drilling_tunnel) {
    // Your implementation goes here
    printf("AddHighDrillingTunnel\n");
  }

  bool DeleteHighDrillingTunnel(const int32_t id) {
    // Your implementation goes here
    printf("DeleteHighDrillingTunnel\n");
  }

  bool UpdateHighDrillingTunnel(const HighDrillingTunnel& high_drilling_tunnel) {
    // Your implementation goes here
    printf("UpdateHighDrillingTunnel\n");
  }

  void GetHighDrillingTunnelById(HighDrillingTunnel& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelById\n");
  }

  void GetHighDrillingTunnelByForeignKey(HighDrillingTunnel& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelByForeignKey\n");
  }

  int32_t GetHighDrillingTunnelIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelIdByForeignKey\n");
  }

  void GetHighDrillingTunnelList(std::vector<HighDrillingTunnel> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelList\n");
  }

  void GetHighDrillingTunnelIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelIds\n");
  }

  void GetHighDrillingTunnelNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelNames\n");
  }

  void AddMoreHighDrillingTunnel(const std::vector<HighDrillingTunnel> & objs) {
    // Your implementation goes here
    printf("AddMoreHighDrillingTunnel\n");
  }

  void DeleteMoreHighDrillingTunnel(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreHighDrillingTunnel\n");
  }

  void GetHighDrillingTunnelByFields(HighDrillingTunnel& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelByFields\n");
  }

  void GetHighDrillingTunnelByField1(HighDrillingTunnel& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelByField1\n");
  }

  void GetHighDrillingTunnelByField2(HighDrillingTunnel& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelByField2\n");
  }

  void GetHighDrillingTunnelListByFields(std::vector<HighDrillingTunnel> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelListByFields\n");
  }

  void GetHighDrillingTunnelListByField1(std::vector<HighDrillingTunnel> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelListByField1\n");
  }

  void GetHighDrillingTunnelListByField2(std::vector<HighDrillingTunnel> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelListByField2\n");
  }

  int32_t GetHighDrillingTunnelIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelIdByFields\n");
  }

  int32_t GetHighDrillingTunnelIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelIdByField1\n");
  }

  int32_t GetHighDrillingTunnelIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelIdByField2\n");
  }

  void GetHighDrillingTunnelIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelIdListByFields\n");
  }

  void GetHighDrillingTunnelIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelIdListByField1\n");
  }

  void GetHighDrillingTunnelIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelIdListByField2\n");
  }

  void GetHighDrillingTunnelListByForeignKey(std::vector<HighDrillingTunnel> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelListByForeignKey\n");
  }

  void GetHighDrillingTunnelIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelIdListByForeignKey\n");
  }

  int32_t AddHydrGeo(const HydrGeo& hydr_geo) {
    // Your implementation goes here
    printf("AddHydrGeo\n");
  }

  bool DeleteHydrGeo(const int32_t id) {
    // Your implementation goes here
    printf("DeleteHydrGeo\n");
  }

  bool UpdateHydrGeo(const HydrGeo& hydr_geo) {
    // Your implementation goes here
    printf("UpdateHydrGeo\n");
  }

  void GetHydrGeoById(HydrGeo& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetHydrGeoById\n");
  }

  void GetHydrGeoByForeignKey(HydrGeo& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHydrGeoByForeignKey\n");
  }

  int32_t GetHydrGeoIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHydrGeoIdByForeignKey\n");
  }

  void GetHydrGeoList(std::vector<HydrGeo> & _return) {
    // Your implementation goes here
    printf("GetHydrGeoList\n");
  }

  void GetHydrGeoIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetHydrGeoIds\n");
  }

  void GetHydrGeoNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetHydrGeoNames\n");
  }

  void AddMoreHydrGeo(const std::vector<HydrGeo> & objs) {
    // Your implementation goes here
    printf("AddMoreHydrGeo\n");
  }

  void DeleteMoreHydrGeo(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreHydrGeo\n");
  }

  void GetHydrGeoByFields(HydrGeo& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHydrGeoByFields\n");
  }

  void GetHydrGeoByField1(HydrGeo& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHydrGeoByField1\n");
  }

  void GetHydrGeoByField2(HydrGeo& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHydrGeoByField2\n");
  }

  void GetHydrGeoListByFields(std::vector<HydrGeo> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHydrGeoListByFields\n");
  }

  void GetHydrGeoListByField1(std::vector<HydrGeo> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHydrGeoListByField1\n");
  }

  void GetHydrGeoListByField2(std::vector<HydrGeo> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHydrGeoListByField2\n");
  }

  int32_t GetHydrGeoIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHydrGeoIdByFields\n");
  }

  int32_t GetHydrGeoIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHydrGeoIdByField1\n");
  }

  int32_t GetHydrGeoIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHydrGeoIdByField2\n");
  }

  void GetHydrGeoIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHydrGeoIdListByFields\n");
  }

  void GetHydrGeoIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHydrGeoIdListByField1\n");
  }

  void GetHydrGeoIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHydrGeoIdListByField2\n");
  }

  void GetHydrGeoListByForeignKey(std::vector<HydrGeo> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHydrGeoListByForeignKey\n");
  }

  void GetHydrGeoIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHydrGeoIdListByForeignKey\n");
  }

  int32_t AddMine(const Mine& mine) {
    // Your implementation goes here
    printf("AddMine\n");
  }

  bool DeleteMine(const int32_t id) {
    // Your implementation goes here
    printf("DeleteMine\n");
  }

  bool UpdateMine(const Mine& mine) {
    // Your implementation goes here
    printf("UpdateMine\n");
  }

  void GetMineById(Mine& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetMineById\n");
  }

  void GetMineByForeignKey(Mine& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetMineByForeignKey\n");
  }

  int32_t GetMineIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetMineIdByForeignKey\n");
  }

  void GetMineList(std::vector<Mine> & _return) {
    // Your implementation goes here
    printf("GetMineList\n");
  }

  void GetMineIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetMineIds\n");
  }

  void GetMineNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetMineNames\n");
  }

  void AddMoreMine(const std::vector<Mine> & objs) {
    // Your implementation goes here
    printf("AddMoreMine\n");
  }

  void DeleteMoreMine(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreMine\n");
  }

  void GetMineByFields(Mine& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineByFields\n");
  }

  void GetMineByField1(Mine& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineByField1\n");
  }

  void GetMineByField2(Mine& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineByField2\n");
  }

  void GetMineListByFields(std::vector<Mine> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineListByFields\n");
  }

  void GetMineListByField1(std::vector<Mine> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineListByField1\n");
  }

  void GetMineListByField2(std::vector<Mine> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineListByField2\n");
  }

  int32_t GetMineIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineIdByFields\n");
  }

  int32_t GetMineIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineIdByField1\n");
  }

  int32_t GetMineIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineIdByField2\n");
  }

  void GetMineIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineIdListByFields\n");
  }

  void GetMineIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineIdListByField1\n");
  }

  void GetMineIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineIdListByField2\n");
  }

  void GetMineListByForeignKey(std::vector<Mine> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetMineListByForeignKey\n");
  }

  void GetMineIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetMineIdListByForeignKey\n");
  }

  int32_t AddMineBase(const MineBase& mine_base) {
    // Your implementation goes here
    printf("AddMineBase\n");
  }

  bool DeleteMineBase(const int32_t id) {
    // Your implementation goes here
    printf("DeleteMineBase\n");
  }

  bool UpdateMineBase(const MineBase& mine_base) {
    // Your implementation goes here
    printf("UpdateMineBase\n");
  }

  void GetMineBaseById(MineBase& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetMineBaseById\n");
  }

  void GetMineBaseByForeignKey(MineBase& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetMineBaseByForeignKey\n");
  }

  int32_t GetMineBaseIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetMineBaseIdByForeignKey\n");
  }

  void GetMineBaseList(std::vector<MineBase> & _return) {
    // Your implementation goes here
    printf("GetMineBaseList\n");
  }

  void GetMineBaseIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetMineBaseIds\n");
  }

  void GetMineBaseNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetMineBaseNames\n");
  }

  void AddMoreMineBase(const std::vector<MineBase> & objs) {
    // Your implementation goes here
    printf("AddMoreMineBase\n");
  }

  void DeleteMoreMineBase(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreMineBase\n");
  }

  void GetMineBaseByFields(MineBase& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineBaseByFields\n");
  }

  void GetMineBaseByField1(MineBase& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineBaseByField1\n");
  }

  void GetMineBaseByField2(MineBase& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineBaseByField2\n");
  }

  void GetMineBaseListByFields(std::vector<MineBase> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineBaseListByFields\n");
  }

  void GetMineBaseListByField1(std::vector<MineBase> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineBaseListByField1\n");
  }

  void GetMineBaseListByField2(std::vector<MineBase> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineBaseListByField2\n");
  }

  int32_t GetMineBaseIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineBaseIdByFields\n");
  }

  int32_t GetMineBaseIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineBaseIdByField1\n");
  }

  int32_t GetMineBaseIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineBaseIdByField2\n");
  }

  void GetMineBaseIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineBaseIdListByFields\n");
  }

  void GetMineBaseIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineBaseIdListByField1\n");
  }

  void GetMineBaseIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineBaseIdListByField2\n");
  }

  void GetMineBaseListByForeignKey(std::vector<MineBase> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetMineBaseListByForeignKey\n");
  }

  void GetMineBaseIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetMineBaseIdListByForeignKey\n");
  }

  int32_t AddMineRegion(const MineRegion& mine_region) {
    // Your implementation goes here
    printf("AddMineRegion\n");
  }

  bool DeleteMineRegion(const int32_t id) {
    // Your implementation goes here
    printf("DeleteMineRegion\n");
  }

  bool UpdateMineRegion(const MineRegion& mine_region) {
    // Your implementation goes here
    printf("UpdateMineRegion\n");
  }

  void GetMineRegionById(MineRegion& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetMineRegionById\n");
  }

  void GetMineRegionByForeignKey(MineRegion& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetMineRegionByForeignKey\n");
  }

  int32_t GetMineRegionIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetMineRegionIdByForeignKey\n");
  }

  void GetMineRegionList(std::vector<MineRegion> & _return) {
    // Your implementation goes here
    printf("GetMineRegionList\n");
  }

  void GetMineRegionIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetMineRegionIds\n");
  }

  void GetMineRegionNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetMineRegionNames\n");
  }

  void AddMoreMineRegion(const std::vector<MineRegion> & objs) {
    // Your implementation goes here
    printf("AddMoreMineRegion\n");
  }

  void DeleteMoreMineRegion(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreMineRegion\n");
  }

  void GetMineRegionByFields(MineRegion& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineRegionByFields\n");
  }

  void GetMineRegionByField1(MineRegion& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineRegionByField1\n");
  }

  void GetMineRegionByField2(MineRegion& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineRegionByField2\n");
  }

  void GetMineRegionListByFields(std::vector<MineRegion> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineRegionListByFields\n");
  }

  void GetMineRegionListByField1(std::vector<MineRegion> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineRegionListByField1\n");
  }

  void GetMineRegionListByField2(std::vector<MineRegion> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineRegionListByField2\n");
  }

  int32_t GetMineRegionIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineRegionIdByFields\n");
  }

  int32_t GetMineRegionIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineRegionIdByField1\n");
  }

  int32_t GetMineRegionIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineRegionIdByField2\n");
  }

  void GetMineRegionIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineRegionIdListByFields\n");
  }

  void GetMineRegionIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineRegionIdListByField1\n");
  }

  void GetMineRegionIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineRegionIdListByField2\n");
  }

  void GetMineRegionListByForeignKey(std::vector<MineRegion> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetMineRegionListByForeignKey\n");
  }

  void GetMineRegionIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetMineRegionIdListByForeignKey\n");
  }

  int32_t AddPoreFlow(const PoreFlow& pore_flow) {
    // Your implementation goes here
    printf("AddPoreFlow\n");
  }

  bool DeletePoreFlow(const int32_t id) {
    // Your implementation goes here
    printf("DeletePoreFlow\n");
  }

  bool UpdatePoreFlow(const PoreFlow& pore_flow) {
    // Your implementation goes here
    printf("UpdatePoreFlow\n");
  }

  void GetPoreFlowById(PoreFlow& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetPoreFlowById\n");
  }

  void GetPoreFlowByForeignKey(PoreFlow& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetPoreFlowByForeignKey\n");
  }

  int32_t GetPoreFlowIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetPoreFlowIdByForeignKey\n");
  }

  void GetPoreFlowList(std::vector<PoreFlow> & _return) {
    // Your implementation goes here
    printf("GetPoreFlowList\n");
  }

  void GetPoreFlowIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetPoreFlowIds\n");
  }

  void GetPoreFlowNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetPoreFlowNames\n");
  }

  void AddMorePoreFlow(const std::vector<PoreFlow> & objs) {
    // Your implementation goes here
    printf("AddMorePoreFlow\n");
  }

  void DeleteMorePoreFlow(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMorePoreFlow\n");
  }

  void GetPoreFlowByFields(PoreFlow& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetPoreFlowByFields\n");
  }

  void GetPoreFlowByField1(PoreFlow& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetPoreFlowByField1\n");
  }

  void GetPoreFlowByField2(PoreFlow& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetPoreFlowByField2\n");
  }

  void GetPoreFlowListByFields(std::vector<PoreFlow> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetPoreFlowListByFields\n");
  }

  void GetPoreFlowListByField1(std::vector<PoreFlow> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetPoreFlowListByField1\n");
  }

  void GetPoreFlowListByField2(std::vector<PoreFlow> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetPoreFlowListByField2\n");
  }

  int32_t GetPoreFlowIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetPoreFlowIdByFields\n");
  }

  int32_t GetPoreFlowIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetPoreFlowIdByField1\n");
  }

  int32_t GetPoreFlowIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetPoreFlowIdByField2\n");
  }

  void GetPoreFlowIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetPoreFlowIdListByFields\n");
  }

  void GetPoreFlowIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetPoreFlowIdListByField1\n");
  }

  void GetPoreFlowIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetPoreFlowIdListByField2\n");
  }

  void GetPoreFlowListByForeignKey(std::vector<PoreFlow> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetPoreFlowListByForeignKey\n");
  }

  void GetPoreFlowIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetPoreFlowIdListByForeignKey\n");
  }

  int32_t AddPoreSize(const PoreSize& pore_size) {
    // Your implementation goes here
    printf("AddPoreSize\n");
  }

  bool DeletePoreSize(const int32_t id) {
    // Your implementation goes here
    printf("DeletePoreSize\n");
  }

  bool UpdatePoreSize(const PoreSize& pore_size) {
    // Your implementation goes here
    printf("UpdatePoreSize\n");
  }

  void GetPoreSizeById(PoreSize& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetPoreSizeById\n");
  }

  void GetPoreSizeByForeignKey(PoreSize& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetPoreSizeByForeignKey\n");
  }

  int32_t GetPoreSizeIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetPoreSizeIdByForeignKey\n");
  }

  void GetPoreSizeList(std::vector<PoreSize> & _return) {
    // Your implementation goes here
    printf("GetPoreSizeList\n");
  }

  void GetPoreSizeIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetPoreSizeIds\n");
  }

  void GetPoreSizeNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetPoreSizeNames\n");
  }

  void AddMorePoreSize(const std::vector<PoreSize> & objs) {
    // Your implementation goes here
    printf("AddMorePoreSize\n");
  }

  void DeleteMorePoreSize(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMorePoreSize\n");
  }

  void GetPoreSizeByFields(PoreSize& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetPoreSizeByFields\n");
  }

  void GetPoreSizeByField1(PoreSize& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetPoreSizeByField1\n");
  }

  void GetPoreSizeByField2(PoreSize& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetPoreSizeByField2\n");
  }

  void GetPoreSizeListByFields(std::vector<PoreSize> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetPoreSizeListByFields\n");
  }

  void GetPoreSizeListByField1(std::vector<PoreSize> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetPoreSizeListByField1\n");
  }

  void GetPoreSizeListByField2(std::vector<PoreSize> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetPoreSizeListByField2\n");
  }

  int32_t GetPoreSizeIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetPoreSizeIdByFields\n");
  }

  int32_t GetPoreSizeIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetPoreSizeIdByField1\n");
  }

  int32_t GetPoreSizeIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetPoreSizeIdByField2\n");
  }

  void GetPoreSizeIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetPoreSizeIdListByFields\n");
  }

  void GetPoreSizeIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetPoreSizeIdListByField1\n");
  }

  void GetPoreSizeIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetPoreSizeIdListByField2\n");
  }

  void GetPoreSizeListByForeignKey(std::vector<PoreSize> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetPoreSizeListByForeignKey\n");
  }

  void GetPoreSizeIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetPoreSizeIdListByForeignKey\n");
  }

  int32_t AddResAbundance(const ResAbundance& res_abundance) {
    // Your implementation goes here
    printf("AddResAbundance\n");
  }

  bool DeleteResAbundance(const int32_t id) {
    // Your implementation goes here
    printf("DeleteResAbundance\n");
  }

  bool UpdateResAbundance(const ResAbundance& res_abundance) {
    // Your implementation goes here
    printf("UpdateResAbundance\n");
  }

  void GetResAbundanceById(ResAbundance& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetResAbundanceById\n");
  }

  void GetResAbundanceByForeignKey(ResAbundance& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetResAbundanceByForeignKey\n");
  }

  int32_t GetResAbundanceIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetResAbundanceIdByForeignKey\n");
  }

  void GetResAbundanceList(std::vector<ResAbundance> & _return) {
    // Your implementation goes here
    printf("GetResAbundanceList\n");
  }

  void GetResAbundanceIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetResAbundanceIds\n");
  }

  void GetResAbundanceNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetResAbundanceNames\n");
  }

  void AddMoreResAbundance(const std::vector<ResAbundance> & objs) {
    // Your implementation goes here
    printf("AddMoreResAbundance\n");
  }

  void DeleteMoreResAbundance(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreResAbundance\n");
  }

  void GetResAbundanceByFields(ResAbundance& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetResAbundanceByFields\n");
  }

  void GetResAbundanceByField1(ResAbundance& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetResAbundanceByField1\n");
  }

  void GetResAbundanceByField2(ResAbundance& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetResAbundanceByField2\n");
  }

  void GetResAbundanceListByFields(std::vector<ResAbundance> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetResAbundanceListByFields\n");
  }

  void GetResAbundanceListByField1(std::vector<ResAbundance> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetResAbundanceListByField1\n");
  }

  void GetResAbundanceListByField2(std::vector<ResAbundance> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetResAbundanceListByField2\n");
  }

  int32_t GetResAbundanceIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetResAbundanceIdByFields\n");
  }

  int32_t GetResAbundanceIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetResAbundanceIdByField1\n");
  }

  int32_t GetResAbundanceIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetResAbundanceIdByField2\n");
  }

  void GetResAbundanceIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetResAbundanceIdListByFields\n");
  }

  void GetResAbundanceIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetResAbundanceIdListByField1\n");
  }

  void GetResAbundanceIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetResAbundanceIdListByField2\n");
  }

  void GetResAbundanceListByForeignKey(std::vector<ResAbundance> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetResAbundanceListByForeignKey\n");
  }

  void GetResAbundanceIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetResAbundanceIdListByForeignKey\n");
  }

  int32_t AddRock(const Rock& rock) {
    // Your implementation goes here
    printf("AddRock\n");
  }

  bool DeleteRock(const int32_t id) {
    // Your implementation goes here
    printf("DeleteRock\n");
  }

  bool UpdateRock(const Rock& rock) {
    // Your implementation goes here
    printf("UpdateRock\n");
  }

  void GetRockById(Rock& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetRockById\n");
  }

  void GetRockByForeignKey(Rock& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetRockByForeignKey\n");
  }

  int32_t GetRockIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetRockIdByForeignKey\n");
  }

  void GetRockList(std::vector<Rock> & _return) {
    // Your implementation goes here
    printf("GetRockList\n");
  }

  void GetRockIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetRockIds\n");
  }

  void GetRockNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetRockNames\n");
  }

  void AddMoreRock(const std::vector<Rock> & objs) {
    // Your implementation goes here
    printf("AddMoreRock\n");
  }

  void DeleteMoreRock(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreRock\n");
  }

  void GetRockByFields(Rock& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetRockByFields\n");
  }

  void GetRockByField1(Rock& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetRockByField1\n");
  }

  void GetRockByField2(Rock& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetRockByField2\n");
  }

  void GetRockListByFields(std::vector<Rock> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetRockListByFields\n");
  }

  void GetRockListByField1(std::vector<Rock> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetRockListByField1\n");
  }

  void GetRockListByField2(std::vector<Rock> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetRockListByField2\n");
  }

  int32_t GetRockIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetRockIdByFields\n");
  }

  int32_t GetRockIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetRockIdByField1\n");
  }

  int32_t GetRockIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetRockIdByField2\n");
  }

  void GetRockIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetRockIdListByFields\n");
  }

  void GetRockIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetRockIdListByField1\n");
  }

  void GetRockIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetRockIdListByField2\n");
  }

  void GetRockListByForeignKey(std::vector<Rock> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetRockListByForeignKey\n");
  }

  void GetRockIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetRockIdListByForeignKey\n");
  }

  int32_t AddSysInfo(const SysInfo& sys_info) {
    // Your implementation goes here
    printf("AddSysInfo\n");
  }

  bool DeleteSysInfo(const int32_t id) {
    // Your implementation goes here
    printf("DeleteSysInfo\n");
  }

  bool UpdateSysInfo(const SysInfo& sys_info) {
    // Your implementation goes here
    printf("UpdateSysInfo\n");
  }

  void GetSysInfoById(SysInfo& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetSysInfoById\n");
  }

  void GetSysInfoByForeignKey(SysInfo& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetSysInfoByForeignKey\n");
  }

  int32_t GetSysInfoIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetSysInfoIdByForeignKey\n");
  }

  void GetSysInfoList(std::vector<SysInfo> & _return) {
    // Your implementation goes here
    printf("GetSysInfoList\n");
  }

  void GetSysInfoIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetSysInfoIds\n");
  }

  void GetSysInfoNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetSysInfoNames\n");
  }

  void AddMoreSysInfo(const std::vector<SysInfo> & objs) {
    // Your implementation goes here
    printf("AddMoreSysInfo\n");
  }

  void DeleteMoreSysInfo(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreSysInfo\n");
  }

  void GetSysInfoByFields(SysInfo& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetSysInfoByFields\n");
  }

  void GetSysInfoByField1(SysInfo& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetSysInfoByField1\n");
  }

  void GetSysInfoByField2(SysInfo& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetSysInfoByField2\n");
  }

  void GetSysInfoListByFields(std::vector<SysInfo> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetSysInfoListByFields\n");
  }

  void GetSysInfoListByField1(std::vector<SysInfo> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetSysInfoListByField1\n");
  }

  void GetSysInfoListByField2(std::vector<SysInfo> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetSysInfoListByField2\n");
  }

  int32_t GetSysInfoIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetSysInfoIdByFields\n");
  }

  int32_t GetSysInfoIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetSysInfoIdByField1\n");
  }

  int32_t GetSysInfoIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetSysInfoIdByField2\n");
  }

  void GetSysInfoIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetSysInfoIdListByFields\n");
  }

  void GetSysInfoIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetSysInfoIdListByField1\n");
  }

  void GetSysInfoIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetSysInfoIdListByField2\n");
  }

  void GetSysInfoListByForeignKey(std::vector<SysInfo> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetSysInfoListByForeignKey\n");
  }

  void GetSysInfoIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetSysInfoIdListByForeignKey\n");
  }

  int32_t AddTechMode(const TechMode& tech_mode) {
    // Your implementation goes here
    printf("AddTechMode\n");
  }

  bool DeleteTechMode(const int32_t id) {
    // Your implementation goes here
    printf("DeleteTechMode\n");
  }

  bool UpdateTechMode(const TechMode& tech_mode) {
    // Your implementation goes here
    printf("UpdateTechMode\n");
  }

  void GetTechModeById(TechMode& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetTechModeById\n");
  }

  void GetTechModeByForeignKey(TechMode& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTechModeByForeignKey\n");
  }

  int32_t GetTechModeIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTechModeIdByForeignKey\n");
  }

  void GetTechModeList(std::vector<TechMode> & _return) {
    // Your implementation goes here
    printf("GetTechModeList\n");
  }

  void GetTechModeIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetTechModeIds\n");
  }

  void GetTechModeNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetTechModeNames\n");
  }

  void AddMoreTechMode(const std::vector<TechMode> & objs) {
    // Your implementation goes here
    printf("AddMoreTechMode\n");
  }

  void DeleteMoreTechMode(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreTechMode\n");
  }

  void GetTechModeByFields(TechMode& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTechModeByFields\n");
  }

  void GetTechModeByField1(TechMode& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTechModeByField1\n");
  }

  void GetTechModeByField2(TechMode& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTechModeByField2\n");
  }

  void GetTechModeListByFields(std::vector<TechMode> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTechModeListByFields\n");
  }

  void GetTechModeListByField1(std::vector<TechMode> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTechModeListByField1\n");
  }

  void GetTechModeListByField2(std::vector<TechMode> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTechModeListByField2\n");
  }

  int32_t GetTechModeIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTechModeIdByFields\n");
  }

  int32_t GetTechModeIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTechModeIdByField1\n");
  }

  int32_t GetTechModeIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTechModeIdByField2\n");
  }

  void GetTechModeIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTechModeIdListByFields\n");
  }

  void GetTechModeIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTechModeIdListByField1\n");
  }

  void GetTechModeIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTechModeIdListByField2\n");
  }

  void GetTechModeListByForeignKey(std::vector<TechMode> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTechModeListByForeignKey\n");
  }

  void GetTechModeIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTechModeIdListByForeignKey\n");
  }

  int32_t AddTechnology(const Technology& technology) {
    // Your implementation goes here
    printf("AddTechnology\n");
  }

  bool DeleteTechnology(const int32_t id) {
    // Your implementation goes here
    printf("DeleteTechnology\n");
  }

  bool UpdateTechnology(const Technology& technology) {
    // Your implementation goes here
    printf("UpdateTechnology\n");
  }

  void GetTechnologyById(Technology& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetTechnologyById\n");
  }

  void GetTechnologyByForeignKey(Technology& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTechnologyByForeignKey\n");
  }

  int32_t GetTechnologyIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTechnologyIdByForeignKey\n");
  }

  void GetTechnologyList(std::vector<Technology> & _return) {
    // Your implementation goes here
    printf("GetTechnologyList\n");
  }

  void GetTechnologyIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetTechnologyIds\n");
  }

  void GetTechnologyNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetTechnologyNames\n");
  }

  void AddMoreTechnology(const std::vector<Technology> & objs) {
    // Your implementation goes here
    printf("AddMoreTechnology\n");
  }

  void DeleteMoreTechnology(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreTechnology\n");
  }

  void GetTechnologyByFields(Technology& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTechnologyByFields\n");
  }

  void GetTechnologyByField1(Technology& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTechnologyByField1\n");
  }

  void GetTechnologyByField2(Technology& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTechnologyByField2\n");
  }

  void GetTechnologyListByFields(std::vector<Technology> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTechnologyListByFields\n");
  }

  void GetTechnologyListByField1(std::vector<Technology> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTechnologyListByField1\n");
  }

  void GetTechnologyListByField2(std::vector<Technology> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTechnologyListByField2\n");
  }

  int32_t GetTechnologyIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTechnologyIdByFields\n");
  }

  int32_t GetTechnologyIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTechnologyIdByField1\n");
  }

  int32_t GetTechnologyIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTechnologyIdByField2\n");
  }

  void GetTechnologyIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTechnologyIdListByFields\n");
  }

  void GetTechnologyIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTechnologyIdListByField1\n");
  }

  void GetTechnologyIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTechnologyIdListByField2\n");
  }

  void GetTechnologyListByForeignKey(std::vector<Technology> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTechnologyListByForeignKey\n");
  }

  void GetTechnologyIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTechnologyIdListByForeignKey\n");
  }

  int32_t AddTopoGeo(const TopoGeo& topo_geo) {
    // Your implementation goes here
    printf("AddTopoGeo\n");
  }

  bool DeleteTopoGeo(const int32_t id) {
    // Your implementation goes here
    printf("DeleteTopoGeo\n");
  }

  bool UpdateTopoGeo(const TopoGeo& topo_geo) {
    // Your implementation goes here
    printf("UpdateTopoGeo\n");
  }

  void GetTopoGeoById(TopoGeo& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetTopoGeoById\n");
  }

  void GetTopoGeoByForeignKey(TopoGeo& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTopoGeoByForeignKey\n");
  }

  int32_t GetTopoGeoIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTopoGeoIdByForeignKey\n");
  }

  void GetTopoGeoList(std::vector<TopoGeo> & _return) {
    // Your implementation goes here
    printf("GetTopoGeoList\n");
  }

  void GetTopoGeoIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetTopoGeoIds\n");
  }

  void GetTopoGeoNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetTopoGeoNames\n");
  }

  void AddMoreTopoGeo(const std::vector<TopoGeo> & objs) {
    // Your implementation goes here
    printf("AddMoreTopoGeo\n");
  }

  void DeleteMoreTopoGeo(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreTopoGeo\n");
  }

  void GetTopoGeoByFields(TopoGeo& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTopoGeoByFields\n");
  }

  void GetTopoGeoByField1(TopoGeo& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTopoGeoByField1\n");
  }

  void GetTopoGeoByField2(TopoGeo& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTopoGeoByField2\n");
  }

  void GetTopoGeoListByFields(std::vector<TopoGeo> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTopoGeoListByFields\n");
  }

  void GetTopoGeoListByField1(std::vector<TopoGeo> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTopoGeoListByField1\n");
  }

  void GetTopoGeoListByField2(std::vector<TopoGeo> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTopoGeoListByField2\n");
  }

  int32_t GetTopoGeoIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTopoGeoIdByFields\n");
  }

  int32_t GetTopoGeoIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTopoGeoIdByField1\n");
  }

  int32_t GetTopoGeoIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTopoGeoIdByField2\n");
  }

  void GetTopoGeoIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTopoGeoIdListByFields\n");
  }

  void GetTopoGeoIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTopoGeoIdListByField1\n");
  }

  void GetTopoGeoIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTopoGeoIdListByField2\n");
  }

  void GetTopoGeoListByForeignKey(std::vector<TopoGeo> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTopoGeoListByForeignKey\n");
  }

  void GetTopoGeoIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTopoGeoIdListByForeignKey\n");
  }

  int32_t AddTunnel(const Tunnel& tunnel) {
    // Your implementation goes here
    printf("AddTunnel\n");
  }

  bool DeleteTunnel(const int32_t id) {
    // Your implementation goes here
    printf("DeleteTunnel\n");
  }

  bool UpdateTunnel(const Tunnel& tunnel) {
    // Your implementation goes here
    printf("UpdateTunnel\n");
  }

  void GetTunnelById(Tunnel& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetTunnelById\n");
  }

  void GetTunnelByForeignKey(Tunnel& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTunnelByForeignKey\n");
  }

  int32_t GetTunnelIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTunnelIdByForeignKey\n");
  }

  void GetTunnelList(std::vector<Tunnel> & _return) {
    // Your implementation goes here
    printf("GetTunnelList\n");
  }

  void GetTunnelIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetTunnelIds\n");
  }

  void GetTunnelNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetTunnelNames\n");
  }

  void AddMoreTunnel(const std::vector<Tunnel> & objs) {
    // Your implementation goes here
    printf("AddMoreTunnel\n");
  }

  void DeleteMoreTunnel(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreTunnel\n");
  }

  void GetTunnelByFields(Tunnel& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTunnelByFields\n");
  }

  void GetTunnelByField1(Tunnel& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTunnelByField1\n");
  }

  void GetTunnelByField2(Tunnel& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTunnelByField2\n");
  }

  void GetTunnelListByFields(std::vector<Tunnel> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTunnelListByFields\n");
  }

  void GetTunnelListByField1(std::vector<Tunnel> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTunnelListByField1\n");
  }

  void GetTunnelListByField2(std::vector<Tunnel> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTunnelListByField2\n");
  }

  int32_t GetTunnelIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTunnelIdByFields\n");
  }

  int32_t GetTunnelIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTunnelIdByField1\n");
  }

  int32_t GetTunnelIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTunnelIdByField2\n");
  }

  void GetTunnelIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTunnelIdListByFields\n");
  }

  void GetTunnelIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTunnelIdListByField1\n");
  }

  void GetTunnelIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTunnelIdListByField2\n");
  }

  void GetTunnelListByForeignKey(std::vector<Tunnel> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTunnelListByForeignKey\n");
  }

  void GetTunnelIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTunnelIdListByForeignKey\n");
  }

  int32_t AddWorkArea(const WorkArea& work_area) {
    // Your implementation goes here
    printf("AddWorkArea\n");
  }

  bool DeleteWorkArea(const int32_t id) {
    // Your implementation goes here
    printf("DeleteWorkArea\n");
  }

  bool UpdateWorkArea(const WorkArea& work_area) {
    // Your implementation goes here
    printf("UpdateWorkArea\n");
  }

  void GetWorkAreaById(WorkArea& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetWorkAreaById\n");
  }

  void GetWorkAreaByForeignKey(WorkArea& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetWorkAreaByForeignKey\n");
  }

  int32_t GetWorkAreaIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetWorkAreaIdByForeignKey\n");
  }

  void GetWorkAreaList(std::vector<WorkArea> & _return) {
    // Your implementation goes here
    printf("GetWorkAreaList\n");
  }

  void GetWorkAreaIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetWorkAreaIds\n");
  }

  void GetWorkAreaNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetWorkAreaNames\n");
  }

  void AddMoreWorkArea(const std::vector<WorkArea> & objs) {
    // Your implementation goes here
    printf("AddMoreWorkArea\n");
  }

  void DeleteMoreWorkArea(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreWorkArea\n");
  }

  void GetWorkAreaByFields(WorkArea& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetWorkAreaByFields\n");
  }

  void GetWorkAreaByField1(WorkArea& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetWorkAreaByField1\n");
  }

  void GetWorkAreaByField2(WorkArea& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetWorkAreaByField2\n");
  }

  void GetWorkAreaListByFields(std::vector<WorkArea> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetWorkAreaListByFields\n");
  }

  void GetWorkAreaListByField1(std::vector<WorkArea> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetWorkAreaListByField1\n");
  }

  void GetWorkAreaListByField2(std::vector<WorkArea> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetWorkAreaListByField2\n");
  }

  int32_t GetWorkAreaIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetWorkAreaIdByFields\n");
  }

  int32_t GetWorkAreaIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetWorkAreaIdByField1\n");
  }

  int32_t GetWorkAreaIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetWorkAreaIdByField2\n");
  }

  void GetWorkAreaIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetWorkAreaIdListByFields\n");
  }

  void GetWorkAreaIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetWorkAreaIdListByField1\n");
  }

  void GetWorkAreaIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetWorkAreaIdListByField2\n");
  }

  void GetWorkAreaListByForeignKey(std::vector<WorkArea> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetWorkAreaListByForeignKey\n");
  }

  void GetWorkAreaIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetWorkAreaIdListByForeignKey\n");
  }

  int32_t AddWorkSurf(const WorkSurf& work_surf) {
    // Your implementation goes here
    printf("AddWorkSurf\n");
  }

  bool DeleteWorkSurf(const int32_t id) {
    // Your implementation goes here
    printf("DeleteWorkSurf\n");
  }

  bool UpdateWorkSurf(const WorkSurf& work_surf) {
    // Your implementation goes here
    printf("UpdateWorkSurf\n");
  }

  void GetWorkSurfById(WorkSurf& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetWorkSurfById\n");
  }

  void GetWorkSurfByForeignKey(WorkSurf& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetWorkSurfByForeignKey\n");
  }

  int32_t GetWorkSurfIdByForeignKey(const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetWorkSurfIdByForeignKey\n");
  }

  void GetWorkSurfList(std::vector<WorkSurf> & _return) {
    // Your implementation goes here
    printf("GetWorkSurfList\n");
  }

  void GetWorkSurfIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetWorkSurfIds\n");
  }

  void GetWorkSurfNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetWorkSurfNames\n");
  }

  void AddMoreWorkSurf(const std::vector<WorkSurf> & objs) {
    // Your implementation goes here
    printf("AddMoreWorkSurf\n");
  }

  void DeleteMoreWorkSurf(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreWorkSurf\n");
  }

  void GetWorkSurfByFields(WorkSurf& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetWorkSurfByFields\n");
  }

  void GetWorkSurfByField1(WorkSurf& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetWorkSurfByField1\n");
  }

  void GetWorkSurfByField2(WorkSurf& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetWorkSurfByField2\n");
  }

  void GetWorkSurfListByFields(std::vector<WorkSurf> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetWorkSurfListByFields\n");
  }

  void GetWorkSurfListByField1(std::vector<WorkSurf> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetWorkSurfListByField1\n");
  }

  void GetWorkSurfListByField2(std::vector<WorkSurf> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetWorkSurfListByField2\n");
  }

  int32_t GetWorkSurfIdByFields(const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetWorkSurfIdByFields\n");
  }

  int32_t GetWorkSurfIdByField1(const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetWorkSurfIdByField1\n");
  }

  int32_t GetWorkSurfIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetWorkSurfIdByField2\n");
  }

  void GetWorkSurfIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetWorkSurfIdListByFields\n");
  }

  void GetWorkSurfIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetWorkSurfIdListByField1\n");
  }

  void GetWorkSurfIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetWorkSurfIdListByField2\n");
  }

  void GetWorkSurfListByForeignKey(std::vector<WorkSurf> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetWorkSurfListByForeignKey\n");
  }

  void GetWorkSurfIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetWorkSurfIdListByForeignKey\n");
  }

  void InitSampleRegion() {
    // Your implementation goes here
    printf("InitSampleRegion\n");
  }

  int32_t GetOnlineAccountId() {
    // Your implementation goes here
    printf("GetOnlineAccountId\n");
  }

  void GetOnlineMine(Mine& _return) {
    // Your implementation goes here
    printf("GetOnlineMine\n");
  }

  int32_t VerifyMineAccount(const std::string& uname, const std::string& pwd) {
    // Your implementation goes here
    printf("VerifyMineAccount\n");
  }

  void GetMineRegionsOfBase(std::vector<std::string> & _return, const std::string& baseName) {
    // Your implementation goes here
    printf("GetMineRegionsOfBase\n");
  }

  void GetBaseByRegion(std::string& _return, const std::string& regionName) {
    // Your implementation goes here
    printf("GetBaseByRegion\n");
  }

  void GetSampleMineOfRegion(Mine& _return, const std::string& regionName) {
    // Your implementation goes here
    printf("GetSampleMineOfRegion\n");
  }

  void GetSampleCoalOfRegion(Coal& _return, const std::string& regionName) {
    // Your implementation goes here
    printf("GetSampleCoalOfRegion\n");
  }

  void GetCoalNamesOfMine(std::vector<std::string> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetCoalNamesOfMine\n");
  }

  void GetCoalIdsOfMine(std::vector<int32_t> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetCoalIdsOfMine\n");
  }

  void GetWorkAreasOfMine(std::vector<WorkArea> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetWorkAreasOfMine\n");
  }

  void GetWorkSurfsOfMine(std::vector<WorkSurf> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetWorkSurfsOfMine\n");
  }

  void GetDrillingSurfsOfMine(std::vector<DrillingSurf> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetDrillingSurfsOfMine\n");
  }

  void GetWorkAreaIdsOfMine(std::vector<int32_t> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetWorkAreaIdsOfMine\n");
  }

  void GetWorkSurfIdsOfMine(std::vector<int32_t> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetWorkSurfIdsOfMine\n");
  }

  void GetDrillingSurfIdsOfMine(std::vector<int32_t> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetDrillingSurfIdsOfMine\n");
  }

  int32_t DifficultEval(const Coal& coal) {
    // Your implementation goes here
    printf("DifficultEval\n");
  }

  void DifficultEvalString(std::string& _return, const Coal& coal) {
    // Your implementation goes here
    printf("DifficultEvalString\n");
  }

  double MineGasReservesW1(const int32_t mine_id) {
    // Your implementation goes here
    printf("MineGasReservesW1\n");
  }

  double MineGasReservesW2(const int32_t mine_id) {
    // Your implementation goes here
    printf("MineGasReservesW2\n");
  }

  double WorkAreaGasFlow(const WorkArea& work_area, const double K1) {
    // Your implementation goes here
    printf("WorkAreaGasFlow\n");
  }

  double MineGasFlow(const Mine& mine) {
    // Your implementation goes here
    printf("MineGasFlow\n");
  }

  double WorkSurfGasFlow1(const Coal& coal, const WorkArea& work_area, const WorkSurf& work_surf) {
    // Your implementation goes here
    printf("WorkSurfGasFlow1\n");
  }

  double WorkSurfGasFlow2(const Coal& coal, const WorkArea& work_area, const WorkSurf& work_surf) {
    // Your implementation goes here
    printf("WorkSurfGasFlow2\n");
  }

  void DrillingSurfGasFlow(DrillingSurfGasFlowResult& _return, const Coal& coal, const DrillingSurf& drilling_surf, const Tunnel& tunnel) {
    // Your implementation goes here
    printf("DrillingSurfGasFlow\n");
  }

  void GetAllPores(std::vector<DesignPore> & _return, const int32_t design_id) {
    // Your implementation goes here
    printf("GetAllPores\n");
  }

  bool SendCommandToCAD(const std::string& cmd, const bool switch_to_cad) {
    // Your implementation goes here
    printf("SendCommandToCAD\n");
  }

  void RequestJsonDatasFromCAD(std::string& _return, const std::string& input_datas) {
    // Your implementation goes here
    printf("RequestJsonDatasFromCAD\n");
  }

  void GetJsonDatasFromRpcCache(std::string& _return, const std::string& secret_key) {
    // Your implementation goes here
    printf("GetJsonDatasFromRpcCache\n");
  }

  void PostJsonDatasFromCAD(const std::string& secret_key, const std::string& input_datas, const std::string& out_datas) {
    // Your implementation goes here
    printf("PostJsonDatasFromCAD\n");
  }

};

int main(int argc, char **argv) {
  int port = 9090;
  shared_ptr<CbmServiceHandler> handler(new CbmServiceHandler());
  shared_ptr<TProcessor> processor(new CbmServiceProcessor(handler));
  shared_ptr<TServerTransport> serverTransport(new TServerSocket(port));
  shared_ptr<TTransportFactory> transportFactory(new TBufferedTransportFactory());
  shared_ptr<TProtocolFactory> protocolFactory(new TBinaryProtocolFactory());

  TSimpleServer server(processor, serverTransport, transportFactory, protocolFactory);
  server.serve();
  return 0;
}

