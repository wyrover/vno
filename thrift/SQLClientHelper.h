#pragma once

#include "RpcClient.h"


class SQLClientHelper {


public:
	//Account 类型的CRUD操作
	static int32_t AddAccount(const cbm::Account & account);
	static bool DeleteAccount(const int32_t id);
	static bool UpdateAccount(const cbm::Account & account);
	static void GetAccountById(cbm::Account & _return, const int32_t id);
	static void GetAccountByForeignKey(cbm::Account & _return, const std::string& fkey, const int32_t id);
	static int32_t GetAccountIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetAccountList(std::vector<cbm::Account> & _return);
	static void GetAccountIds(std::vector<int32_t> & _return);
	static void GetAccountNames(std::vector<std::string> & _return);
	static void AddMoreAccount(const std::vector<cbm::Account> & objs);
	static void DeleteMoreAccount(const std::vector<int32_t> & obj_ids);
	static void GetAccountByFields(cbm::Account & _return, const std::map<std::string, std::string> & fields);
	static void GetAccountByField1(cbm::Account & _return, const std::string& field, const std::string& value);
	static void GetAccountByField2(cbm::Account & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetAccountListByFields(std::vector<cbm::Account> & _return, const std::map<std::string, std::string> & fields);
	static void GetAccountListByField1(std::vector<cbm::Account> & _return, const std::string& field, const std::string& value);
	static void GetAccountListByField2(std::vector<cbm::Account> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetAccountIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetAccountIdByField1(const std::string& field, const std::string& value);
	static int32_t GetAccountIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetAccountIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetAccountIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetAccountIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetAccountListByForeignKey(std::vector<cbm::Account> & _return, const std::string& fkey, const int32_t id);
	static void GetAccountIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//AdjLayer 类型的CRUD操作
	static int32_t AddAdjLayer(const cbm::AdjLayer & adj_layer);
	static bool DeleteAdjLayer(const int32_t id);
	static bool UpdateAdjLayer(const cbm::AdjLayer & adj_layer);
	static void GetAdjLayerById(cbm::AdjLayer & _return, const int32_t id);
	static void GetAdjLayerByForeignKey(cbm::AdjLayer & _return, const std::string& fkey, const int32_t id);
	static int32_t GetAdjLayerIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetAdjLayerList(std::vector<cbm::AdjLayer> & _return);
	static void GetAdjLayerIds(std::vector<int32_t> & _return);
	static void GetAdjLayerNames(std::vector<std::string> & _return);
	static void AddMoreAdjLayer(const std::vector<cbm::AdjLayer> & objs);
	static void DeleteMoreAdjLayer(const std::vector<int32_t> & obj_ids);
	static void GetAdjLayerByFields(cbm::AdjLayer & _return, const std::map<std::string, std::string> & fields);
	static void GetAdjLayerByField1(cbm::AdjLayer & _return, const std::string& field, const std::string& value);
	static void GetAdjLayerByField2(cbm::AdjLayer & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetAdjLayerListByFields(std::vector<cbm::AdjLayer> & _return, const std::map<std::string, std::string> & fields);
	static void GetAdjLayerListByField1(std::vector<cbm::AdjLayer> & _return, const std::string& field, const std::string& value);
	static void GetAdjLayerListByField2(std::vector<cbm::AdjLayer> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetAdjLayerIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetAdjLayerIdByField1(const std::string& field, const std::string& value);
	static int32_t GetAdjLayerIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetAdjLayerIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetAdjLayerIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetAdjLayerIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetAdjLayerListByForeignKey(std::vector<cbm::AdjLayer> & _return, const std::string& fkey, const int32_t id);
	static void GetAdjLayerIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//Coal 类型的CRUD操作
	static int32_t AddCoal(const cbm::Coal & coal);
	static bool DeleteCoal(const int32_t id);
	static bool UpdateCoal(const cbm::Coal & coal);
	static void GetCoalById(cbm::Coal & _return, const int32_t id);
	static void GetCoalByForeignKey(cbm::Coal & _return, const std::string& fkey, const int32_t id);
	static int32_t GetCoalIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetCoalList(std::vector<cbm::Coal> & _return);
	static void GetCoalIds(std::vector<int32_t> & _return);
	static void GetCoalNames(std::vector<std::string> & _return);
	static void AddMoreCoal(const std::vector<cbm::Coal> & objs);
	static void DeleteMoreCoal(const std::vector<int32_t> & obj_ids);
	static void GetCoalByFields(cbm::Coal & _return, const std::map<std::string, std::string> & fields);
	static void GetCoalByField1(cbm::Coal & _return, const std::string& field, const std::string& value);
	static void GetCoalByField2(cbm::Coal & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetCoalListByFields(std::vector<cbm::Coal> & _return, const std::map<std::string, std::string> & fields);
	static void GetCoalListByField1(std::vector<cbm::Coal> & _return, const std::string& field, const std::string& value);
	static void GetCoalListByField2(std::vector<cbm::Coal> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetCoalIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetCoalIdByField1(const std::string& field, const std::string& value);
	static int32_t GetCoalIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetCoalIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetCoalIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetCoalIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetCoalListByForeignKey(std::vector<cbm::Coal> & _return, const std::string& fkey, const int32_t id);
	static void GetCoalIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//Complexity 类型的CRUD操作
	static int32_t AddComplexity(const cbm::Complexity & complexity);
	static bool DeleteComplexity(const int32_t id);
	static bool UpdateComplexity(const cbm::Complexity & complexity);
	static void GetComplexityById(cbm::Complexity & _return, const int32_t id);
	static void GetComplexityByForeignKey(cbm::Complexity & _return, const std::string& fkey, const int32_t id);
	static int32_t GetComplexityIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetComplexityList(std::vector<cbm::Complexity> & _return);
	static void GetComplexityIds(std::vector<int32_t> & _return);
	static void GetComplexityNames(std::vector<std::string> & _return);
	static void AddMoreComplexity(const std::vector<cbm::Complexity> & objs);
	static void DeleteMoreComplexity(const std::vector<int32_t> & obj_ids);
	static void GetComplexityByFields(cbm::Complexity & _return, const std::map<std::string, std::string> & fields);
	static void GetComplexityByField1(cbm::Complexity & _return, const std::string& field, const std::string& value);
	static void GetComplexityByField2(cbm::Complexity & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetComplexityListByFields(std::vector<cbm::Complexity> & _return, const std::map<std::string, std::string> & fields);
	static void GetComplexityListByField1(std::vector<cbm::Complexity> & _return, const std::string& field, const std::string& value);
	static void GetComplexityListByField2(std::vector<cbm::Complexity> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetComplexityIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetComplexityIdByField1(const std::string& field, const std::string& value);
	static int32_t GetComplexityIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetComplexityIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetComplexityIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetComplexityIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetComplexityListByForeignKey(std::vector<cbm::Complexity> & _return, const std::string& fkey, const int32_t id);
	static void GetComplexityIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//DesignDrillingSurfTechnology 类型的CRUD操作
	static int32_t AddDesignDrillingSurfTechnology(const cbm::DesignDrillingSurfTechnology & design_drilling_surf_technology);
	static bool DeleteDesignDrillingSurfTechnology(const int32_t id);
	static bool UpdateDesignDrillingSurfTechnology(const cbm::DesignDrillingSurfTechnology & design_drilling_surf_technology);
	static void GetDesignDrillingSurfTechnologyById(cbm::DesignDrillingSurfTechnology & _return, const int32_t id);
	static void GetDesignDrillingSurfTechnologyByForeignKey(cbm::DesignDrillingSurfTechnology & _return, const std::string& fkey, const int32_t id);
	static int32_t GetDesignDrillingSurfTechnologyIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetDesignDrillingSurfTechnologyList(std::vector<cbm::DesignDrillingSurfTechnology> & _return);
	static void GetDesignDrillingSurfTechnologyIds(std::vector<int32_t> & _return);
	static void GetDesignDrillingSurfTechnologyNames(std::vector<std::string> & _return);
	static void AddMoreDesignDrillingSurfTechnology(const std::vector<cbm::DesignDrillingSurfTechnology> & objs);
	static void DeleteMoreDesignDrillingSurfTechnology(const std::vector<int32_t> & obj_ids);
	static void GetDesignDrillingSurfTechnologyByFields(cbm::DesignDrillingSurfTechnology & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignDrillingSurfTechnologyByField1(cbm::DesignDrillingSurfTechnology & _return, const std::string& field, const std::string& value);
	static void GetDesignDrillingSurfTechnologyByField2(cbm::DesignDrillingSurfTechnology & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignDrillingSurfTechnologyListByFields(std::vector<cbm::DesignDrillingSurfTechnology> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignDrillingSurfTechnologyListByField1(std::vector<cbm::DesignDrillingSurfTechnology> & _return, const std::string& field, const std::string& value);
	static void GetDesignDrillingSurfTechnologyListByField2(std::vector<cbm::DesignDrillingSurfTechnology> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetDesignDrillingSurfTechnologyIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetDesignDrillingSurfTechnologyIdByField1(const std::string& field, const std::string& value);
	static int32_t GetDesignDrillingSurfTechnologyIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignDrillingSurfTechnologyIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignDrillingSurfTechnologyIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetDesignDrillingSurfTechnologyIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignDrillingSurfTechnologyListByForeignKey(std::vector<cbm::DesignDrillingSurfTechnology> & _return, const std::string& fkey, const int32_t id);
	static void GetDesignDrillingSurfTechnologyIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//DesignEvalUnit 类型的CRUD操作
	static int32_t AddDesignEvalUnit(const cbm::DesignEvalUnit & design_eval_unit);
	static bool DeleteDesignEvalUnit(const int32_t id);
	static bool UpdateDesignEvalUnit(const cbm::DesignEvalUnit & design_eval_unit);
	static void GetDesignEvalUnitById(cbm::DesignEvalUnit & _return, const int32_t id);
	static void GetDesignEvalUnitByForeignKey(cbm::DesignEvalUnit & _return, const std::string& fkey, const int32_t id);
	static int32_t GetDesignEvalUnitIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetDesignEvalUnitList(std::vector<cbm::DesignEvalUnit> & _return);
	static void GetDesignEvalUnitIds(std::vector<int32_t> & _return);
	static void GetDesignEvalUnitNames(std::vector<std::string> & _return);
	static void AddMoreDesignEvalUnit(const std::vector<cbm::DesignEvalUnit> & objs);
	static void DeleteMoreDesignEvalUnit(const std::vector<int32_t> & obj_ids);
	static void GetDesignEvalUnitByFields(cbm::DesignEvalUnit & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignEvalUnitByField1(cbm::DesignEvalUnit & _return, const std::string& field, const std::string& value);
	static void GetDesignEvalUnitByField2(cbm::DesignEvalUnit & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignEvalUnitListByFields(std::vector<cbm::DesignEvalUnit> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignEvalUnitListByField1(std::vector<cbm::DesignEvalUnit> & _return, const std::string& field, const std::string& value);
	static void GetDesignEvalUnitListByField2(std::vector<cbm::DesignEvalUnit> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetDesignEvalUnitIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetDesignEvalUnitIdByField1(const std::string& field, const std::string& value);
	static int32_t GetDesignEvalUnitIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignEvalUnitIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignEvalUnitIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetDesignEvalUnitIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignEvalUnitListByForeignKey(std::vector<cbm::DesignEvalUnit> & _return, const std::string& fkey, const int32_t id);
	static void GetDesignEvalUnitIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//DesignEvalUnitPartition 类型的CRUD操作
	static int32_t AddDesignEvalUnitPartition(const cbm::DesignEvalUnitPartition & design_eval_unit_partition);
	static bool DeleteDesignEvalUnitPartition(const int32_t id);
	static bool UpdateDesignEvalUnitPartition(const cbm::DesignEvalUnitPartition & design_eval_unit_partition);
	static void GetDesignEvalUnitPartitionById(cbm::DesignEvalUnitPartition & _return, const int32_t id);
	static void GetDesignEvalUnitPartitionByForeignKey(cbm::DesignEvalUnitPartition & _return, const std::string& fkey, const int32_t id);
	static int32_t GetDesignEvalUnitPartitionIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetDesignEvalUnitPartitionList(std::vector<cbm::DesignEvalUnitPartition> & _return);
	static void GetDesignEvalUnitPartitionIds(std::vector<int32_t> & _return);
	static void GetDesignEvalUnitPartitionNames(std::vector<std::string> & _return);
	static void AddMoreDesignEvalUnitPartition(const std::vector<cbm::DesignEvalUnitPartition> & objs);
	static void DeleteMoreDesignEvalUnitPartition(const std::vector<int32_t> & obj_ids);
	static void GetDesignEvalUnitPartitionByFields(cbm::DesignEvalUnitPartition & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignEvalUnitPartitionByField1(cbm::DesignEvalUnitPartition & _return, const std::string& field, const std::string& value);
	static void GetDesignEvalUnitPartitionByField2(cbm::DesignEvalUnitPartition & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignEvalUnitPartitionListByFields(std::vector<cbm::DesignEvalUnitPartition> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignEvalUnitPartitionListByField1(std::vector<cbm::DesignEvalUnitPartition> & _return, const std::string& field, const std::string& value);
	static void GetDesignEvalUnitPartitionListByField2(std::vector<cbm::DesignEvalUnitPartition> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetDesignEvalUnitPartitionIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetDesignEvalUnitPartitionIdByField1(const std::string& field, const std::string& value);
	static int32_t GetDesignEvalUnitPartitionIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignEvalUnitPartitionIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignEvalUnitPartitionIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetDesignEvalUnitPartitionIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignEvalUnitPartitionListByForeignKey(std::vector<cbm::DesignEvalUnitPartition> & _return, const std::string& fkey, const int32_t id);
	static void GetDesignEvalUnitPartitionIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//DesignGoafPore 类型的CRUD操作
	static int32_t AddDesignGoafPore(const cbm::DesignGoafPore & design_goaf_pore);
	static bool DeleteDesignGoafPore(const int32_t id);
	static bool UpdateDesignGoafPore(const cbm::DesignGoafPore & design_goaf_pore);
	static void GetDesignGoafPoreById(cbm::DesignGoafPore & _return, const int32_t id);
	static void GetDesignGoafPoreByForeignKey(cbm::DesignGoafPore & _return, const std::string& fkey, const int32_t id);
	static int32_t GetDesignGoafPoreIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetDesignGoafPoreList(std::vector<cbm::DesignGoafPore> & _return);
	static void GetDesignGoafPoreIds(std::vector<int32_t> & _return);
	static void GetDesignGoafPoreNames(std::vector<std::string> & _return);
	static void AddMoreDesignGoafPore(const std::vector<cbm::DesignGoafPore> & objs);
	static void DeleteMoreDesignGoafPore(const std::vector<int32_t> & obj_ids);
	static void GetDesignGoafPoreByFields(cbm::DesignGoafPore & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignGoafPoreByField1(cbm::DesignGoafPore & _return, const std::string& field, const std::string& value);
	static void GetDesignGoafPoreByField2(cbm::DesignGoafPore & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignGoafPoreListByFields(std::vector<cbm::DesignGoafPore> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignGoafPoreListByField1(std::vector<cbm::DesignGoafPore> & _return, const std::string& field, const std::string& value);
	static void GetDesignGoafPoreListByField2(std::vector<cbm::DesignGoafPore> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetDesignGoafPoreIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetDesignGoafPoreIdByField1(const std::string& field, const std::string& value);
	static int32_t GetDesignGoafPoreIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignGoafPoreIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignGoafPoreIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetDesignGoafPoreIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignGoafPoreListByForeignKey(std::vector<cbm::DesignGoafPore> & _return, const std::string& fkey, const int32_t id);
	static void GetDesignGoafPoreIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//DesignGoafTechnology 类型的CRUD操作
	static int32_t AddDesignGoafTechnology(const cbm::DesignGoafTechnology & design_goaf_technology);
	static bool DeleteDesignGoafTechnology(const int32_t id);
	static bool UpdateDesignGoafTechnology(const cbm::DesignGoafTechnology & design_goaf_technology);
	static void GetDesignGoafTechnologyById(cbm::DesignGoafTechnology & _return, const int32_t id);
	static void GetDesignGoafTechnologyByForeignKey(cbm::DesignGoafTechnology & _return, const std::string& fkey, const int32_t id);
	static int32_t GetDesignGoafTechnologyIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetDesignGoafTechnologyList(std::vector<cbm::DesignGoafTechnology> & _return);
	static void GetDesignGoafTechnologyIds(std::vector<int32_t> & _return);
	static void GetDesignGoafTechnologyNames(std::vector<std::string> & _return);
	static void AddMoreDesignGoafTechnology(const std::vector<cbm::DesignGoafTechnology> & objs);
	static void DeleteMoreDesignGoafTechnology(const std::vector<int32_t> & obj_ids);
	static void GetDesignGoafTechnologyByFields(cbm::DesignGoafTechnology & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignGoafTechnologyByField1(cbm::DesignGoafTechnology & _return, const std::string& field, const std::string& value);
	static void GetDesignGoafTechnologyByField2(cbm::DesignGoafTechnology & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignGoafTechnologyListByFields(std::vector<cbm::DesignGoafTechnology> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignGoafTechnologyListByField1(std::vector<cbm::DesignGoafTechnology> & _return, const std::string& field, const std::string& value);
	static void GetDesignGoafTechnologyListByField2(std::vector<cbm::DesignGoafTechnology> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetDesignGoafTechnologyIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetDesignGoafTechnologyIdByField1(const std::string& field, const std::string& value);
	static int32_t GetDesignGoafTechnologyIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignGoafTechnologyIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignGoafTechnologyIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetDesignGoafTechnologyIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignGoafTechnologyListByForeignKey(std::vector<cbm::DesignGoafTechnology> & _return, const std::string& fkey, const int32_t id);
	static void GetDesignGoafTechnologyIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//DesignPore 类型的CRUD操作
	static int32_t AddDesignPore(const cbm::DesignPore & design_pore);
	static bool DeleteDesignPore(const int32_t id);
	static bool UpdateDesignPore(const cbm::DesignPore & design_pore);
	static void GetDesignPoreById(cbm::DesignPore & _return, const int32_t id);
	static void GetDesignPoreByForeignKey(cbm::DesignPore & _return, const std::string& fkey, const int32_t id);
	static int32_t GetDesignPoreIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetDesignPoreList(std::vector<cbm::DesignPore> & _return);
	static void GetDesignPoreIds(std::vector<int32_t> & _return);
	static void GetDesignPoreNames(std::vector<std::string> & _return);
	static void AddMoreDesignPore(const std::vector<cbm::DesignPore> & objs);
	static void DeleteMoreDesignPore(const std::vector<int32_t> & obj_ids);
	static void GetDesignPoreByFields(cbm::DesignPore & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignPoreByField1(cbm::DesignPore & _return, const std::string& field, const std::string& value);
	static void GetDesignPoreByField2(cbm::DesignPore & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignPoreListByFields(std::vector<cbm::DesignPore> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignPoreListByField1(std::vector<cbm::DesignPore> & _return, const std::string& field, const std::string& value);
	static void GetDesignPoreListByField2(std::vector<cbm::DesignPore> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetDesignPoreIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetDesignPoreIdByField1(const std::string& field, const std::string& value);
	static int32_t GetDesignPoreIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignPoreIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignPoreIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetDesignPoreIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignPoreListByForeignKey(std::vector<cbm::DesignPore> & _return, const std::string& fkey, const int32_t id);
	static void GetDesignPoreIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//DesignSite 类型的CRUD操作
	static int32_t AddDesignSite(const cbm::DesignSite & design_site);
	static bool DeleteDesignSite(const int32_t id);
	static bool UpdateDesignSite(const cbm::DesignSite & design_site);
	static void GetDesignSiteById(cbm::DesignSite & _return, const int32_t id);
	static void GetDesignSiteByForeignKey(cbm::DesignSite & _return, const std::string& fkey, const int32_t id);
	static int32_t GetDesignSiteIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetDesignSiteList(std::vector<cbm::DesignSite> & _return);
	static void GetDesignSiteIds(std::vector<int32_t> & _return);
	static void GetDesignSiteNames(std::vector<std::string> & _return);
	static void AddMoreDesignSite(const std::vector<cbm::DesignSite> & objs);
	static void DeleteMoreDesignSite(const std::vector<int32_t> & obj_ids);
	static void GetDesignSiteByFields(cbm::DesignSite & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignSiteByField1(cbm::DesignSite & _return, const std::string& field, const std::string& value);
	static void GetDesignSiteByField2(cbm::DesignSite & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignSiteListByFields(std::vector<cbm::DesignSite> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignSiteListByField1(std::vector<cbm::DesignSite> & _return, const std::string& field, const std::string& value);
	static void GetDesignSiteListByField2(std::vector<cbm::DesignSite> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetDesignSiteIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetDesignSiteIdByField1(const std::string& field, const std::string& value);
	static int32_t GetDesignSiteIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignSiteIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignSiteIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetDesignSiteIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignSiteListByForeignKey(std::vector<cbm::DesignSite> & _return, const std::string& fkey, const int32_t id);
	static void GetDesignSiteIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//DesignTechnology 类型的CRUD操作
	static int32_t AddDesignTechnology(const cbm::DesignTechnology & design_technology);
	static bool DeleteDesignTechnology(const int32_t id);
	static bool UpdateDesignTechnology(const cbm::DesignTechnology & design_technology);
	static void GetDesignTechnologyById(cbm::DesignTechnology & _return, const int32_t id);
	static void GetDesignTechnologyByForeignKey(cbm::DesignTechnology & _return, const std::string& fkey, const int32_t id);
	static int32_t GetDesignTechnologyIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetDesignTechnologyList(std::vector<cbm::DesignTechnology> & _return);
	static void GetDesignTechnologyIds(std::vector<int32_t> & _return);
	static void GetDesignTechnologyNames(std::vector<std::string> & _return);
	static void AddMoreDesignTechnology(const std::vector<cbm::DesignTechnology> & objs);
	static void DeleteMoreDesignTechnology(const std::vector<int32_t> & obj_ids);
	static void GetDesignTechnologyByFields(cbm::DesignTechnology & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignTechnologyByField1(cbm::DesignTechnology & _return, const std::string& field, const std::string& value);
	static void GetDesignTechnologyByField2(cbm::DesignTechnology & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignTechnologyListByFields(std::vector<cbm::DesignTechnology> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignTechnologyListByField1(std::vector<cbm::DesignTechnology> & _return, const std::string& field, const std::string& value);
	static void GetDesignTechnologyListByField2(std::vector<cbm::DesignTechnology> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetDesignTechnologyIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetDesignTechnologyIdByField1(const std::string& field, const std::string& value);
	static int32_t GetDesignTechnologyIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignTechnologyIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignTechnologyIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetDesignTechnologyIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignTechnologyListByForeignKey(std::vector<cbm::DesignTechnology> & _return, const std::string& fkey, const int32_t id);
	static void GetDesignTechnologyIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//DesignTunnelControlPoint 类型的CRUD操作
	static int32_t AddDesignTunnelControlPoint(const cbm::DesignTunnelControlPoint & design_tunnel_control_point);
	static bool DeleteDesignTunnelControlPoint(const int32_t id);
	static bool UpdateDesignTunnelControlPoint(const cbm::DesignTunnelControlPoint & design_tunnel_control_point);
	static void GetDesignTunnelControlPointById(cbm::DesignTunnelControlPoint & _return, const int32_t id);
	static void GetDesignTunnelControlPointByForeignKey(cbm::DesignTunnelControlPoint & _return, const std::string& fkey, const int32_t id);
	static int32_t GetDesignTunnelControlPointIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetDesignTunnelControlPointList(std::vector<cbm::DesignTunnelControlPoint> & _return);
	static void GetDesignTunnelControlPointIds(std::vector<int32_t> & _return);
	static void GetDesignTunnelControlPointNames(std::vector<std::string> & _return);
	static void AddMoreDesignTunnelControlPoint(const std::vector<cbm::DesignTunnelControlPoint> & objs);
	static void DeleteMoreDesignTunnelControlPoint(const std::vector<int32_t> & obj_ids);
	static void GetDesignTunnelControlPointByFields(cbm::DesignTunnelControlPoint & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignTunnelControlPointByField1(cbm::DesignTunnelControlPoint & _return, const std::string& field, const std::string& value);
	static void GetDesignTunnelControlPointByField2(cbm::DesignTunnelControlPoint & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignTunnelControlPointListByFields(std::vector<cbm::DesignTunnelControlPoint> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignTunnelControlPointListByField1(std::vector<cbm::DesignTunnelControlPoint> & _return, const std::string& field, const std::string& value);
	static void GetDesignTunnelControlPointListByField2(std::vector<cbm::DesignTunnelControlPoint> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetDesignTunnelControlPointIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetDesignTunnelControlPointIdByField1(const std::string& field, const std::string& value);
	static int32_t GetDesignTunnelControlPointIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignTunnelControlPointIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignTunnelControlPointIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetDesignTunnelControlPointIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignTunnelControlPointListByForeignKey(std::vector<cbm::DesignTunnelControlPoint> & _return, const std::string& fkey, const int32_t id);
	static void GetDesignTunnelControlPointIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//DesignWorkSurfControlPoint 类型的CRUD操作
	static int32_t AddDesignWorkSurfControlPoint(const cbm::DesignWorkSurfControlPoint & design_work_surf_control_point);
	static bool DeleteDesignWorkSurfControlPoint(const int32_t id);
	static bool UpdateDesignWorkSurfControlPoint(const cbm::DesignWorkSurfControlPoint & design_work_surf_control_point);
	static void GetDesignWorkSurfControlPointById(cbm::DesignWorkSurfControlPoint & _return, const int32_t id);
	static void GetDesignWorkSurfControlPointByForeignKey(cbm::DesignWorkSurfControlPoint & _return, const std::string& fkey, const int32_t id);
	static int32_t GetDesignWorkSurfControlPointIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetDesignWorkSurfControlPointList(std::vector<cbm::DesignWorkSurfControlPoint> & _return);
	static void GetDesignWorkSurfControlPointIds(std::vector<int32_t> & _return);
	static void GetDesignWorkSurfControlPointNames(std::vector<std::string> & _return);
	static void AddMoreDesignWorkSurfControlPoint(const std::vector<cbm::DesignWorkSurfControlPoint> & objs);
	static void DeleteMoreDesignWorkSurfControlPoint(const std::vector<int32_t> & obj_ids);
	static void GetDesignWorkSurfControlPointByFields(cbm::DesignWorkSurfControlPoint & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignWorkSurfControlPointByField1(cbm::DesignWorkSurfControlPoint & _return, const std::string& field, const std::string& value);
	static void GetDesignWorkSurfControlPointByField2(cbm::DesignWorkSurfControlPoint & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignWorkSurfControlPointListByFields(std::vector<cbm::DesignWorkSurfControlPoint> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignWorkSurfControlPointListByField1(std::vector<cbm::DesignWorkSurfControlPoint> & _return, const std::string& field, const std::string& value);
	static void GetDesignWorkSurfControlPointListByField2(std::vector<cbm::DesignWorkSurfControlPoint> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetDesignWorkSurfControlPointIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetDesignWorkSurfControlPointIdByField1(const std::string& field, const std::string& value);
	static int32_t GetDesignWorkSurfControlPointIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignWorkSurfControlPointIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignWorkSurfControlPointIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetDesignWorkSurfControlPointIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignWorkSurfControlPointListByForeignKey(std::vector<cbm::DesignWorkSurfControlPoint> & _return, const std::string& fkey, const int32_t id);
	static void GetDesignWorkSurfControlPointIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//DesignWorkSurfTechnology 类型的CRUD操作
	static int32_t AddDesignWorkSurfTechnology(const cbm::DesignWorkSurfTechnology & design_work_surf_technology);
	static bool DeleteDesignWorkSurfTechnology(const int32_t id);
	static bool UpdateDesignWorkSurfTechnology(const cbm::DesignWorkSurfTechnology & design_work_surf_technology);
	static void GetDesignWorkSurfTechnologyById(cbm::DesignWorkSurfTechnology & _return, const int32_t id);
	static void GetDesignWorkSurfTechnologyByForeignKey(cbm::DesignWorkSurfTechnology & _return, const std::string& fkey, const int32_t id);
	static int32_t GetDesignWorkSurfTechnologyIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetDesignWorkSurfTechnologyList(std::vector<cbm::DesignWorkSurfTechnology> & _return);
	static void GetDesignWorkSurfTechnologyIds(std::vector<int32_t> & _return);
	static void GetDesignWorkSurfTechnologyNames(std::vector<std::string> & _return);
	static void AddMoreDesignWorkSurfTechnology(const std::vector<cbm::DesignWorkSurfTechnology> & objs);
	static void DeleteMoreDesignWorkSurfTechnology(const std::vector<int32_t> & obj_ids);
	static void GetDesignWorkSurfTechnologyByFields(cbm::DesignWorkSurfTechnology & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignWorkSurfTechnologyByField1(cbm::DesignWorkSurfTechnology & _return, const std::string& field, const std::string& value);
	static void GetDesignWorkSurfTechnologyByField2(cbm::DesignWorkSurfTechnology & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignWorkSurfTechnologyListByFields(std::vector<cbm::DesignWorkSurfTechnology> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignWorkSurfTechnologyListByField1(std::vector<cbm::DesignWorkSurfTechnology> & _return, const std::string& field, const std::string& value);
	static void GetDesignWorkSurfTechnologyListByField2(std::vector<cbm::DesignWorkSurfTechnology> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetDesignWorkSurfTechnologyIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetDesignWorkSurfTechnologyIdByField1(const std::string& field, const std::string& value);
	static int32_t GetDesignWorkSurfTechnologyIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignWorkSurfTechnologyIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetDesignWorkSurfTechnologyIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetDesignWorkSurfTechnologyIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDesignWorkSurfTechnologyListByForeignKey(std::vector<cbm::DesignWorkSurfTechnology> & _return, const std::string& fkey, const int32_t id);
	static void GetDesignWorkSurfTechnologyIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//DrillingRadiusParam 类型的CRUD操作
	static int32_t AddDrillingRadiusParam(const cbm::DrillingRadiusParam & drilling_radius_param);
	static bool DeleteDrillingRadiusParam(const int32_t id);
	static bool UpdateDrillingRadiusParam(const cbm::DrillingRadiusParam & drilling_radius_param);
	static void GetDrillingRadiusParamById(cbm::DrillingRadiusParam & _return, const int32_t id);
	static void GetDrillingRadiusParamByForeignKey(cbm::DrillingRadiusParam & _return, const std::string& fkey, const int32_t id);
	static int32_t GetDrillingRadiusParamIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetDrillingRadiusParamList(std::vector<cbm::DrillingRadiusParam> & _return);
	static void GetDrillingRadiusParamIds(std::vector<int32_t> & _return);
	static void GetDrillingRadiusParamNames(std::vector<std::string> & _return);
	static void AddMoreDrillingRadiusParam(const std::vector<cbm::DrillingRadiusParam> & objs);
	static void DeleteMoreDrillingRadiusParam(const std::vector<int32_t> & obj_ids);
	static void GetDrillingRadiusParamByFields(cbm::DrillingRadiusParam & _return, const std::map<std::string, std::string> & fields);
	static void GetDrillingRadiusParamByField1(cbm::DrillingRadiusParam & _return, const std::string& field, const std::string& value);
	static void GetDrillingRadiusParamByField2(cbm::DrillingRadiusParam & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDrillingRadiusParamListByFields(std::vector<cbm::DrillingRadiusParam> & _return, const std::map<std::string, std::string> & fields);
	static void GetDrillingRadiusParamListByField1(std::vector<cbm::DrillingRadiusParam> & _return, const std::string& field, const std::string& value);
	static void GetDrillingRadiusParamListByField2(std::vector<cbm::DrillingRadiusParam> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetDrillingRadiusParamIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetDrillingRadiusParamIdByField1(const std::string& field, const std::string& value);
	static int32_t GetDrillingRadiusParamIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDrillingRadiusParamIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetDrillingRadiusParamIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetDrillingRadiusParamIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDrillingRadiusParamListByForeignKey(std::vector<cbm::DrillingRadiusParam> & _return, const std::string& fkey, const int32_t id);
	static void GetDrillingRadiusParamIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//DrillingSurf 类型的CRUD操作
	static int32_t AddDrillingSurf(const cbm::DrillingSurf & drilling_surf);
	static bool DeleteDrillingSurf(const int32_t id);
	static bool UpdateDrillingSurf(const cbm::DrillingSurf & drilling_surf);
	static void GetDrillingSurfById(cbm::DrillingSurf & _return, const int32_t id);
	static void GetDrillingSurfByForeignKey(cbm::DrillingSurf & _return, const std::string& fkey, const int32_t id);
	static int32_t GetDrillingSurfIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetDrillingSurfList(std::vector<cbm::DrillingSurf> & _return);
	static void GetDrillingSurfIds(std::vector<int32_t> & _return);
	static void GetDrillingSurfNames(std::vector<std::string> & _return);
	static void AddMoreDrillingSurf(const std::vector<cbm::DrillingSurf> & objs);
	static void DeleteMoreDrillingSurf(const std::vector<int32_t> & obj_ids);
	static void GetDrillingSurfByFields(cbm::DrillingSurf & _return, const std::map<std::string, std::string> & fields);
	static void GetDrillingSurfByField1(cbm::DrillingSurf & _return, const std::string& field, const std::string& value);
	static void GetDrillingSurfByField2(cbm::DrillingSurf & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDrillingSurfListByFields(std::vector<cbm::DrillingSurf> & _return, const std::map<std::string, std::string> & fields);
	static void GetDrillingSurfListByField1(std::vector<cbm::DrillingSurf> & _return, const std::string& field, const std::string& value);
	static void GetDrillingSurfListByField2(std::vector<cbm::DrillingSurf> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetDrillingSurfIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetDrillingSurfIdByField1(const std::string& field, const std::string& value);
	static int32_t GetDrillingSurfIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDrillingSurfIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetDrillingSurfIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetDrillingSurfIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetDrillingSurfListByForeignKey(std::vector<cbm::DrillingSurf> & _return, const std::string& fkey, const int32_t id);
	static void GetDrillingSurfIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//HighDrillingPore 类型的CRUD操作
	static int32_t AddHighDrillingPore(const cbm::HighDrillingPore & high_drilling_pore);
	static bool DeleteHighDrillingPore(const int32_t id);
	static bool UpdateHighDrillingPore(const cbm::HighDrillingPore & high_drilling_pore);
	static void GetHighDrillingPoreById(cbm::HighDrillingPore & _return, const int32_t id);
	static void GetHighDrillingPoreByForeignKey(cbm::HighDrillingPore & _return, const std::string& fkey, const int32_t id);
	static int32_t GetHighDrillingPoreIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetHighDrillingPoreList(std::vector<cbm::HighDrillingPore> & _return);
	static void GetHighDrillingPoreIds(std::vector<int32_t> & _return);
	static void GetHighDrillingPoreNames(std::vector<std::string> & _return);
	static void AddMoreHighDrillingPore(const std::vector<cbm::HighDrillingPore> & objs);
	static void DeleteMoreHighDrillingPore(const std::vector<int32_t> & obj_ids);
	static void GetHighDrillingPoreByFields(cbm::HighDrillingPore & _return, const std::map<std::string, std::string> & fields);
	static void GetHighDrillingPoreByField1(cbm::HighDrillingPore & _return, const std::string& field, const std::string& value);
	static void GetHighDrillingPoreByField2(cbm::HighDrillingPore & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetHighDrillingPoreListByFields(std::vector<cbm::HighDrillingPore> & _return, const std::map<std::string, std::string> & fields);
	static void GetHighDrillingPoreListByField1(std::vector<cbm::HighDrillingPore> & _return, const std::string& field, const std::string& value);
	static void GetHighDrillingPoreListByField2(std::vector<cbm::HighDrillingPore> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetHighDrillingPoreIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetHighDrillingPoreIdByField1(const std::string& field, const std::string& value);
	static int32_t GetHighDrillingPoreIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetHighDrillingPoreIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetHighDrillingPoreIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetHighDrillingPoreIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetHighDrillingPoreListByForeignKey(std::vector<cbm::HighDrillingPore> & _return, const std::string& fkey, const int32_t id);
	static void GetHighDrillingPoreIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//HighDrillingPoreParam 类型的CRUD操作
	static int32_t AddHighDrillingPoreParam(const cbm::HighDrillingPoreParam & high_drilling_pore_param);
	static bool DeleteHighDrillingPoreParam(const int32_t id);
	static bool UpdateHighDrillingPoreParam(const cbm::HighDrillingPoreParam & high_drilling_pore_param);
	static void GetHighDrillingPoreParamById(cbm::HighDrillingPoreParam & _return, const int32_t id);
	static void GetHighDrillingPoreParamByForeignKey(cbm::HighDrillingPoreParam & _return, const std::string& fkey, const int32_t id);
	static int32_t GetHighDrillingPoreParamIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetHighDrillingPoreParamList(std::vector<cbm::HighDrillingPoreParam> & _return);
	static void GetHighDrillingPoreParamIds(std::vector<int32_t> & _return);
	static void GetHighDrillingPoreParamNames(std::vector<std::string> & _return);
	static void AddMoreHighDrillingPoreParam(const std::vector<cbm::HighDrillingPoreParam> & objs);
	static void DeleteMoreHighDrillingPoreParam(const std::vector<int32_t> & obj_ids);
	static void GetHighDrillingPoreParamByFields(cbm::HighDrillingPoreParam & _return, const std::map<std::string, std::string> & fields);
	static void GetHighDrillingPoreParamByField1(cbm::HighDrillingPoreParam & _return, const std::string& field, const std::string& value);
	static void GetHighDrillingPoreParamByField2(cbm::HighDrillingPoreParam & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetHighDrillingPoreParamListByFields(std::vector<cbm::HighDrillingPoreParam> & _return, const std::map<std::string, std::string> & fields);
	static void GetHighDrillingPoreParamListByField1(std::vector<cbm::HighDrillingPoreParam> & _return, const std::string& field, const std::string& value);
	static void GetHighDrillingPoreParamListByField2(std::vector<cbm::HighDrillingPoreParam> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetHighDrillingPoreParamIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetHighDrillingPoreParamIdByField1(const std::string& field, const std::string& value);
	static int32_t GetHighDrillingPoreParamIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetHighDrillingPoreParamIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetHighDrillingPoreParamIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetHighDrillingPoreParamIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetHighDrillingPoreParamListByForeignKey(std::vector<cbm::HighDrillingPoreParam> & _return, const std::string& fkey, const int32_t id);
	static void GetHighDrillingPoreParamIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//HighDrillingSiteParam 类型的CRUD操作
	static int32_t AddHighDrillingSiteParam(const cbm::HighDrillingSiteParam & high_drilling_site_param);
	static bool DeleteHighDrillingSiteParam(const int32_t id);
	static bool UpdateHighDrillingSiteParam(const cbm::HighDrillingSiteParam & high_drilling_site_param);
	static void GetHighDrillingSiteParamById(cbm::HighDrillingSiteParam & _return, const int32_t id);
	static void GetHighDrillingSiteParamByForeignKey(cbm::HighDrillingSiteParam & _return, const std::string& fkey, const int32_t id);
	static int32_t GetHighDrillingSiteParamIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetHighDrillingSiteParamList(std::vector<cbm::HighDrillingSiteParam> & _return);
	static void GetHighDrillingSiteParamIds(std::vector<int32_t> & _return);
	static void GetHighDrillingSiteParamNames(std::vector<std::string> & _return);
	static void AddMoreHighDrillingSiteParam(const std::vector<cbm::HighDrillingSiteParam> & objs);
	static void DeleteMoreHighDrillingSiteParam(const std::vector<int32_t> & obj_ids);
	static void GetHighDrillingSiteParamByFields(cbm::HighDrillingSiteParam & _return, const std::map<std::string, std::string> & fields);
	static void GetHighDrillingSiteParamByField1(cbm::HighDrillingSiteParam & _return, const std::string& field, const std::string& value);
	static void GetHighDrillingSiteParamByField2(cbm::HighDrillingSiteParam & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetHighDrillingSiteParamListByFields(std::vector<cbm::HighDrillingSiteParam> & _return, const std::map<std::string, std::string> & fields);
	static void GetHighDrillingSiteParamListByField1(std::vector<cbm::HighDrillingSiteParam> & _return, const std::string& field, const std::string& value);
	static void GetHighDrillingSiteParamListByField2(std::vector<cbm::HighDrillingSiteParam> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetHighDrillingSiteParamIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetHighDrillingSiteParamIdByField1(const std::string& field, const std::string& value);
	static int32_t GetHighDrillingSiteParamIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetHighDrillingSiteParamIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetHighDrillingSiteParamIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetHighDrillingSiteParamIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetHighDrillingSiteParamListByForeignKey(std::vector<cbm::HighDrillingSiteParam> & _return, const std::string& fkey, const int32_t id);
	static void GetHighDrillingSiteParamIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//HighDrillingTunnel 类型的CRUD操作
	static int32_t AddHighDrillingTunnel(const cbm::HighDrillingTunnel & high_drilling_tunnel);
	static bool DeleteHighDrillingTunnel(const int32_t id);
	static bool UpdateHighDrillingTunnel(const cbm::HighDrillingTunnel & high_drilling_tunnel);
	static void GetHighDrillingTunnelById(cbm::HighDrillingTunnel & _return, const int32_t id);
	static void GetHighDrillingTunnelByForeignKey(cbm::HighDrillingTunnel & _return, const std::string& fkey, const int32_t id);
	static int32_t GetHighDrillingTunnelIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetHighDrillingTunnelList(std::vector<cbm::HighDrillingTunnel> & _return);
	static void GetHighDrillingTunnelIds(std::vector<int32_t> & _return);
	static void GetHighDrillingTunnelNames(std::vector<std::string> & _return);
	static void AddMoreHighDrillingTunnel(const std::vector<cbm::HighDrillingTunnel> & objs);
	static void DeleteMoreHighDrillingTunnel(const std::vector<int32_t> & obj_ids);
	static void GetHighDrillingTunnelByFields(cbm::HighDrillingTunnel & _return, const std::map<std::string, std::string> & fields);
	static void GetHighDrillingTunnelByField1(cbm::HighDrillingTunnel & _return, const std::string& field, const std::string& value);
	static void GetHighDrillingTunnelByField2(cbm::HighDrillingTunnel & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetHighDrillingTunnelListByFields(std::vector<cbm::HighDrillingTunnel> & _return, const std::map<std::string, std::string> & fields);
	static void GetHighDrillingTunnelListByField1(std::vector<cbm::HighDrillingTunnel> & _return, const std::string& field, const std::string& value);
	static void GetHighDrillingTunnelListByField2(std::vector<cbm::HighDrillingTunnel> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetHighDrillingTunnelIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetHighDrillingTunnelIdByField1(const std::string& field, const std::string& value);
	static int32_t GetHighDrillingTunnelIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetHighDrillingTunnelIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetHighDrillingTunnelIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetHighDrillingTunnelIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetHighDrillingTunnelListByForeignKey(std::vector<cbm::HighDrillingTunnel> & _return, const std::string& fkey, const int32_t id);
	static void GetHighDrillingTunnelIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//HydrGeo 类型的CRUD操作
	static int32_t AddHydrGeo(const cbm::HydrGeo & hydr_geo);
	static bool DeleteHydrGeo(const int32_t id);
	static bool UpdateHydrGeo(const cbm::HydrGeo & hydr_geo);
	static void GetHydrGeoById(cbm::HydrGeo & _return, const int32_t id);
	static void GetHydrGeoByForeignKey(cbm::HydrGeo & _return, const std::string& fkey, const int32_t id);
	static int32_t GetHydrGeoIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetHydrGeoList(std::vector<cbm::HydrGeo> & _return);
	static void GetHydrGeoIds(std::vector<int32_t> & _return);
	static void GetHydrGeoNames(std::vector<std::string> & _return);
	static void AddMoreHydrGeo(const std::vector<cbm::HydrGeo> & objs);
	static void DeleteMoreHydrGeo(const std::vector<int32_t> & obj_ids);
	static void GetHydrGeoByFields(cbm::HydrGeo & _return, const std::map<std::string, std::string> & fields);
	static void GetHydrGeoByField1(cbm::HydrGeo & _return, const std::string& field, const std::string& value);
	static void GetHydrGeoByField2(cbm::HydrGeo & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetHydrGeoListByFields(std::vector<cbm::HydrGeo> & _return, const std::map<std::string, std::string> & fields);
	static void GetHydrGeoListByField1(std::vector<cbm::HydrGeo> & _return, const std::string& field, const std::string& value);
	static void GetHydrGeoListByField2(std::vector<cbm::HydrGeo> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetHydrGeoIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetHydrGeoIdByField1(const std::string& field, const std::string& value);
	static int32_t GetHydrGeoIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetHydrGeoIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetHydrGeoIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetHydrGeoIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetHydrGeoListByForeignKey(std::vector<cbm::HydrGeo> & _return, const std::string& fkey, const int32_t id);
	static void GetHydrGeoIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//Mine 类型的CRUD操作
	static int32_t AddMine(const cbm::Mine & mine);
	static bool DeleteMine(const int32_t id);
	static bool UpdateMine(const cbm::Mine & mine);
	static void GetMineById(cbm::Mine & _return, const int32_t id);
	static void GetMineByForeignKey(cbm::Mine & _return, const std::string& fkey, const int32_t id);
	static int32_t GetMineIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetMineList(std::vector<cbm::Mine> & _return);
	static void GetMineIds(std::vector<int32_t> & _return);
	static void GetMineNames(std::vector<std::string> & _return);
	static void AddMoreMine(const std::vector<cbm::Mine> & objs);
	static void DeleteMoreMine(const std::vector<int32_t> & obj_ids);
	static void GetMineByFields(cbm::Mine & _return, const std::map<std::string, std::string> & fields);
	static void GetMineByField1(cbm::Mine & _return, const std::string& field, const std::string& value);
	static void GetMineByField2(cbm::Mine & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetMineListByFields(std::vector<cbm::Mine> & _return, const std::map<std::string, std::string> & fields);
	static void GetMineListByField1(std::vector<cbm::Mine> & _return, const std::string& field, const std::string& value);
	static void GetMineListByField2(std::vector<cbm::Mine> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetMineIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetMineIdByField1(const std::string& field, const std::string& value);
	static int32_t GetMineIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetMineIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetMineIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetMineIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetMineListByForeignKey(std::vector<cbm::Mine> & _return, const std::string& fkey, const int32_t id);
	static void GetMineIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//MineBase 类型的CRUD操作
	static int32_t AddMineBase(const cbm::MineBase & mine_base);
	static bool DeleteMineBase(const int32_t id);
	static bool UpdateMineBase(const cbm::MineBase & mine_base);
	static void GetMineBaseById(cbm::MineBase & _return, const int32_t id);
	static void GetMineBaseByForeignKey(cbm::MineBase & _return, const std::string& fkey, const int32_t id);
	static int32_t GetMineBaseIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetMineBaseList(std::vector<cbm::MineBase> & _return);
	static void GetMineBaseIds(std::vector<int32_t> & _return);
	static void GetMineBaseNames(std::vector<std::string> & _return);
	static void AddMoreMineBase(const std::vector<cbm::MineBase> & objs);
	static void DeleteMoreMineBase(const std::vector<int32_t> & obj_ids);
	static void GetMineBaseByFields(cbm::MineBase & _return, const std::map<std::string, std::string> & fields);
	static void GetMineBaseByField1(cbm::MineBase & _return, const std::string& field, const std::string& value);
	static void GetMineBaseByField2(cbm::MineBase & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetMineBaseListByFields(std::vector<cbm::MineBase> & _return, const std::map<std::string, std::string> & fields);
	static void GetMineBaseListByField1(std::vector<cbm::MineBase> & _return, const std::string& field, const std::string& value);
	static void GetMineBaseListByField2(std::vector<cbm::MineBase> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetMineBaseIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetMineBaseIdByField1(const std::string& field, const std::string& value);
	static int32_t GetMineBaseIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetMineBaseIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetMineBaseIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetMineBaseIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetMineBaseListByForeignKey(std::vector<cbm::MineBase> & _return, const std::string& fkey, const int32_t id);
	static void GetMineBaseIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//MineRegion 类型的CRUD操作
	static int32_t AddMineRegion(const cbm::MineRegion & mine_region);
	static bool DeleteMineRegion(const int32_t id);
	static bool UpdateMineRegion(const cbm::MineRegion & mine_region);
	static void GetMineRegionById(cbm::MineRegion & _return, const int32_t id);
	static void GetMineRegionByForeignKey(cbm::MineRegion & _return, const std::string& fkey, const int32_t id);
	static int32_t GetMineRegionIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetMineRegionList(std::vector<cbm::MineRegion> & _return);
	static void GetMineRegionIds(std::vector<int32_t> & _return);
	static void GetMineRegionNames(std::vector<std::string> & _return);
	static void AddMoreMineRegion(const std::vector<cbm::MineRegion> & objs);
	static void DeleteMoreMineRegion(const std::vector<int32_t> & obj_ids);
	static void GetMineRegionByFields(cbm::MineRegion & _return, const std::map<std::string, std::string> & fields);
	static void GetMineRegionByField1(cbm::MineRegion & _return, const std::string& field, const std::string& value);
	static void GetMineRegionByField2(cbm::MineRegion & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetMineRegionListByFields(std::vector<cbm::MineRegion> & _return, const std::map<std::string, std::string> & fields);
	static void GetMineRegionListByField1(std::vector<cbm::MineRegion> & _return, const std::string& field, const std::string& value);
	static void GetMineRegionListByField2(std::vector<cbm::MineRegion> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetMineRegionIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetMineRegionIdByField1(const std::string& field, const std::string& value);
	static int32_t GetMineRegionIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetMineRegionIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetMineRegionIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetMineRegionIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetMineRegionListByForeignKey(std::vector<cbm::MineRegion> & _return, const std::string& fkey, const int32_t id);
	static void GetMineRegionIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//PoreFlow 类型的CRUD操作
	static int32_t AddPoreFlow(const cbm::PoreFlow & pore_flow);
	static bool DeletePoreFlow(const int32_t id);
	static bool UpdatePoreFlow(const cbm::PoreFlow & pore_flow);
	static void GetPoreFlowById(cbm::PoreFlow & _return, const int32_t id);
	static void GetPoreFlowByForeignKey(cbm::PoreFlow & _return, const std::string& fkey, const int32_t id);
	static int32_t GetPoreFlowIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetPoreFlowList(std::vector<cbm::PoreFlow> & _return);
	static void GetPoreFlowIds(std::vector<int32_t> & _return);
	static void GetPoreFlowNames(std::vector<std::string> & _return);
	static void AddMorePoreFlow(const std::vector<cbm::PoreFlow> & objs);
	static void DeleteMorePoreFlow(const std::vector<int32_t> & obj_ids);
	static void GetPoreFlowByFields(cbm::PoreFlow & _return, const std::map<std::string, std::string> & fields);
	static void GetPoreFlowByField1(cbm::PoreFlow & _return, const std::string& field, const std::string& value);
	static void GetPoreFlowByField2(cbm::PoreFlow & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetPoreFlowListByFields(std::vector<cbm::PoreFlow> & _return, const std::map<std::string, std::string> & fields);
	static void GetPoreFlowListByField1(std::vector<cbm::PoreFlow> & _return, const std::string& field, const std::string& value);
	static void GetPoreFlowListByField2(std::vector<cbm::PoreFlow> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetPoreFlowIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetPoreFlowIdByField1(const std::string& field, const std::string& value);
	static int32_t GetPoreFlowIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetPoreFlowIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetPoreFlowIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetPoreFlowIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetPoreFlowListByForeignKey(std::vector<cbm::PoreFlow> & _return, const std::string& fkey, const int32_t id);
	static void GetPoreFlowIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//PoreSize 类型的CRUD操作
	static int32_t AddPoreSize(const cbm::PoreSize & pore_size);
	static bool DeletePoreSize(const int32_t id);
	static bool UpdatePoreSize(const cbm::PoreSize & pore_size);
	static void GetPoreSizeById(cbm::PoreSize & _return, const int32_t id);
	static void GetPoreSizeByForeignKey(cbm::PoreSize & _return, const std::string& fkey, const int32_t id);
	static int32_t GetPoreSizeIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetPoreSizeList(std::vector<cbm::PoreSize> & _return);
	static void GetPoreSizeIds(std::vector<int32_t> & _return);
	static void GetPoreSizeNames(std::vector<std::string> & _return);
	static void AddMorePoreSize(const std::vector<cbm::PoreSize> & objs);
	static void DeleteMorePoreSize(const std::vector<int32_t> & obj_ids);
	static void GetPoreSizeByFields(cbm::PoreSize & _return, const std::map<std::string, std::string> & fields);
	static void GetPoreSizeByField1(cbm::PoreSize & _return, const std::string& field, const std::string& value);
	static void GetPoreSizeByField2(cbm::PoreSize & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetPoreSizeListByFields(std::vector<cbm::PoreSize> & _return, const std::map<std::string, std::string> & fields);
	static void GetPoreSizeListByField1(std::vector<cbm::PoreSize> & _return, const std::string& field, const std::string& value);
	static void GetPoreSizeListByField2(std::vector<cbm::PoreSize> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetPoreSizeIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetPoreSizeIdByField1(const std::string& field, const std::string& value);
	static int32_t GetPoreSizeIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetPoreSizeIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetPoreSizeIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetPoreSizeIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetPoreSizeListByForeignKey(std::vector<cbm::PoreSize> & _return, const std::string& fkey, const int32_t id);
	static void GetPoreSizeIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//ResAbundance 类型的CRUD操作
	static int32_t AddResAbundance(const cbm::ResAbundance & res_abundance);
	static bool DeleteResAbundance(const int32_t id);
	static bool UpdateResAbundance(const cbm::ResAbundance & res_abundance);
	static void GetResAbundanceById(cbm::ResAbundance & _return, const int32_t id);
	static void GetResAbundanceByForeignKey(cbm::ResAbundance & _return, const std::string& fkey, const int32_t id);
	static int32_t GetResAbundanceIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetResAbundanceList(std::vector<cbm::ResAbundance> & _return);
	static void GetResAbundanceIds(std::vector<int32_t> & _return);
	static void GetResAbundanceNames(std::vector<std::string> & _return);
	static void AddMoreResAbundance(const std::vector<cbm::ResAbundance> & objs);
	static void DeleteMoreResAbundance(const std::vector<int32_t> & obj_ids);
	static void GetResAbundanceByFields(cbm::ResAbundance & _return, const std::map<std::string, std::string> & fields);
	static void GetResAbundanceByField1(cbm::ResAbundance & _return, const std::string& field, const std::string& value);
	static void GetResAbundanceByField2(cbm::ResAbundance & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetResAbundanceListByFields(std::vector<cbm::ResAbundance> & _return, const std::map<std::string, std::string> & fields);
	static void GetResAbundanceListByField1(std::vector<cbm::ResAbundance> & _return, const std::string& field, const std::string& value);
	static void GetResAbundanceListByField2(std::vector<cbm::ResAbundance> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetResAbundanceIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetResAbundanceIdByField1(const std::string& field, const std::string& value);
	static int32_t GetResAbundanceIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetResAbundanceIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetResAbundanceIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetResAbundanceIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetResAbundanceListByForeignKey(std::vector<cbm::ResAbundance> & _return, const std::string& fkey, const int32_t id);
	static void GetResAbundanceIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//Rock 类型的CRUD操作
	static int32_t AddRock(const cbm::Rock & rock);
	static bool DeleteRock(const int32_t id);
	static bool UpdateRock(const cbm::Rock & rock);
	static void GetRockById(cbm::Rock & _return, const int32_t id);
	static void GetRockByForeignKey(cbm::Rock & _return, const std::string& fkey, const int32_t id);
	static int32_t GetRockIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetRockList(std::vector<cbm::Rock> & _return);
	static void GetRockIds(std::vector<int32_t> & _return);
	static void GetRockNames(std::vector<std::string> & _return);
	static void AddMoreRock(const std::vector<cbm::Rock> & objs);
	static void DeleteMoreRock(const std::vector<int32_t> & obj_ids);
	static void GetRockByFields(cbm::Rock & _return, const std::map<std::string, std::string> & fields);
	static void GetRockByField1(cbm::Rock & _return, const std::string& field, const std::string& value);
	static void GetRockByField2(cbm::Rock & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetRockListByFields(std::vector<cbm::Rock> & _return, const std::map<std::string, std::string> & fields);
	static void GetRockListByField1(std::vector<cbm::Rock> & _return, const std::string& field, const std::string& value);
	static void GetRockListByField2(std::vector<cbm::Rock> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetRockIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetRockIdByField1(const std::string& field, const std::string& value);
	static int32_t GetRockIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetRockIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetRockIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetRockIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetRockListByForeignKey(std::vector<cbm::Rock> & _return, const std::string& fkey, const int32_t id);
	static void GetRockIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//SysInfo 类型的CRUD操作
	static int32_t AddSysInfo(const cbm::SysInfo & sys_info);
	static bool DeleteSysInfo(const int32_t id);
	static bool UpdateSysInfo(const cbm::SysInfo & sys_info);
	static void GetSysInfoById(cbm::SysInfo & _return, const int32_t id);
	static void GetSysInfoByForeignKey(cbm::SysInfo & _return, const std::string& fkey, const int32_t id);
	static int32_t GetSysInfoIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetSysInfoList(std::vector<cbm::SysInfo> & _return);
	static void GetSysInfoIds(std::vector<int32_t> & _return);
	static void GetSysInfoNames(std::vector<std::string> & _return);
	static void AddMoreSysInfo(const std::vector<cbm::SysInfo> & objs);
	static void DeleteMoreSysInfo(const std::vector<int32_t> & obj_ids);
	static void GetSysInfoByFields(cbm::SysInfo & _return, const std::map<std::string, std::string> & fields);
	static void GetSysInfoByField1(cbm::SysInfo & _return, const std::string& field, const std::string& value);
	static void GetSysInfoByField2(cbm::SysInfo & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetSysInfoListByFields(std::vector<cbm::SysInfo> & _return, const std::map<std::string, std::string> & fields);
	static void GetSysInfoListByField1(std::vector<cbm::SysInfo> & _return, const std::string& field, const std::string& value);
	static void GetSysInfoListByField2(std::vector<cbm::SysInfo> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetSysInfoIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetSysInfoIdByField1(const std::string& field, const std::string& value);
	static int32_t GetSysInfoIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetSysInfoIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetSysInfoIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetSysInfoIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetSysInfoListByForeignKey(std::vector<cbm::SysInfo> & _return, const std::string& fkey, const int32_t id);
	static void GetSysInfoIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//TechMode 类型的CRUD操作
	static int32_t AddTechMode(const cbm::TechMode & tech_mode);
	static bool DeleteTechMode(const int32_t id);
	static bool UpdateTechMode(const cbm::TechMode & tech_mode);
	static void GetTechModeById(cbm::TechMode & _return, const int32_t id);
	static void GetTechModeByForeignKey(cbm::TechMode & _return, const std::string& fkey, const int32_t id);
	static int32_t GetTechModeIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetTechModeList(std::vector<cbm::TechMode> & _return);
	static void GetTechModeIds(std::vector<int32_t> & _return);
	static void GetTechModeNames(std::vector<std::string> & _return);
	static void AddMoreTechMode(const std::vector<cbm::TechMode> & objs);
	static void DeleteMoreTechMode(const std::vector<int32_t> & obj_ids);
	static void GetTechModeByFields(cbm::TechMode & _return, const std::map<std::string, std::string> & fields);
	static void GetTechModeByField1(cbm::TechMode & _return, const std::string& field, const std::string& value);
	static void GetTechModeByField2(cbm::TechMode & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetTechModeListByFields(std::vector<cbm::TechMode> & _return, const std::map<std::string, std::string> & fields);
	static void GetTechModeListByField1(std::vector<cbm::TechMode> & _return, const std::string& field, const std::string& value);
	static void GetTechModeListByField2(std::vector<cbm::TechMode> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetTechModeIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetTechModeIdByField1(const std::string& field, const std::string& value);
	static int32_t GetTechModeIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetTechModeIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetTechModeIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetTechModeIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetTechModeListByForeignKey(std::vector<cbm::TechMode> & _return, const std::string& fkey, const int32_t id);
	static void GetTechModeIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//Technology 类型的CRUD操作
	static int32_t AddTechnology(const cbm::Technology & technology);
	static bool DeleteTechnology(const int32_t id);
	static bool UpdateTechnology(const cbm::Technology & technology);
	static void GetTechnologyById(cbm::Technology & _return, const int32_t id);
	static void GetTechnologyByForeignKey(cbm::Technology & _return, const std::string& fkey, const int32_t id);
	static int32_t GetTechnologyIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetTechnologyList(std::vector<cbm::Technology> & _return);
	static void GetTechnologyIds(std::vector<int32_t> & _return);
	static void GetTechnologyNames(std::vector<std::string> & _return);
	static void AddMoreTechnology(const std::vector<cbm::Technology> & objs);
	static void DeleteMoreTechnology(const std::vector<int32_t> & obj_ids);
	static void GetTechnologyByFields(cbm::Technology & _return, const std::map<std::string, std::string> & fields);
	static void GetTechnologyByField1(cbm::Technology & _return, const std::string& field, const std::string& value);
	static void GetTechnologyByField2(cbm::Technology & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetTechnologyListByFields(std::vector<cbm::Technology> & _return, const std::map<std::string, std::string> & fields);
	static void GetTechnologyListByField1(std::vector<cbm::Technology> & _return, const std::string& field, const std::string& value);
	static void GetTechnologyListByField2(std::vector<cbm::Technology> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetTechnologyIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetTechnologyIdByField1(const std::string& field, const std::string& value);
	static int32_t GetTechnologyIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetTechnologyIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetTechnologyIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetTechnologyIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetTechnologyListByForeignKey(std::vector<cbm::Technology> & _return, const std::string& fkey, const int32_t id);
	static void GetTechnologyIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//TopoGeo 类型的CRUD操作
	static int32_t AddTopoGeo(const cbm::TopoGeo & topo_geo);
	static bool DeleteTopoGeo(const int32_t id);
	static bool UpdateTopoGeo(const cbm::TopoGeo & topo_geo);
	static void GetTopoGeoById(cbm::TopoGeo & _return, const int32_t id);
	static void GetTopoGeoByForeignKey(cbm::TopoGeo & _return, const std::string& fkey, const int32_t id);
	static int32_t GetTopoGeoIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetTopoGeoList(std::vector<cbm::TopoGeo> & _return);
	static void GetTopoGeoIds(std::vector<int32_t> & _return);
	static void GetTopoGeoNames(std::vector<std::string> & _return);
	static void AddMoreTopoGeo(const std::vector<cbm::TopoGeo> & objs);
	static void DeleteMoreTopoGeo(const std::vector<int32_t> & obj_ids);
	static void GetTopoGeoByFields(cbm::TopoGeo & _return, const std::map<std::string, std::string> & fields);
	static void GetTopoGeoByField1(cbm::TopoGeo & _return, const std::string& field, const std::string& value);
	static void GetTopoGeoByField2(cbm::TopoGeo & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetTopoGeoListByFields(std::vector<cbm::TopoGeo> & _return, const std::map<std::string, std::string> & fields);
	static void GetTopoGeoListByField1(std::vector<cbm::TopoGeo> & _return, const std::string& field, const std::string& value);
	static void GetTopoGeoListByField2(std::vector<cbm::TopoGeo> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetTopoGeoIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetTopoGeoIdByField1(const std::string& field, const std::string& value);
	static int32_t GetTopoGeoIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetTopoGeoIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetTopoGeoIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetTopoGeoIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetTopoGeoListByForeignKey(std::vector<cbm::TopoGeo> & _return, const std::string& fkey, const int32_t id);
	static void GetTopoGeoIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//Tunnel 类型的CRUD操作
	static int32_t AddTunnel(const cbm::Tunnel & tunnel);
	static bool DeleteTunnel(const int32_t id);
	static bool UpdateTunnel(const cbm::Tunnel & tunnel);
	static void GetTunnelById(cbm::Tunnel & _return, const int32_t id);
	static void GetTunnelByForeignKey(cbm::Tunnel & _return, const std::string& fkey, const int32_t id);
	static int32_t GetTunnelIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetTunnelList(std::vector<cbm::Tunnel> & _return);
	static void GetTunnelIds(std::vector<int32_t> & _return);
	static void GetTunnelNames(std::vector<std::string> & _return);
	static void AddMoreTunnel(const std::vector<cbm::Tunnel> & objs);
	static void DeleteMoreTunnel(const std::vector<int32_t> & obj_ids);
	static void GetTunnelByFields(cbm::Tunnel & _return, const std::map<std::string, std::string> & fields);
	static void GetTunnelByField1(cbm::Tunnel & _return, const std::string& field, const std::string& value);
	static void GetTunnelByField2(cbm::Tunnel & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetTunnelListByFields(std::vector<cbm::Tunnel> & _return, const std::map<std::string, std::string> & fields);
	static void GetTunnelListByField1(std::vector<cbm::Tunnel> & _return, const std::string& field, const std::string& value);
	static void GetTunnelListByField2(std::vector<cbm::Tunnel> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetTunnelIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetTunnelIdByField1(const std::string& field, const std::string& value);
	static int32_t GetTunnelIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetTunnelIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetTunnelIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetTunnelIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetTunnelListByForeignKey(std::vector<cbm::Tunnel> & _return, const std::string& fkey, const int32_t id);
	static void GetTunnelIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//WorkArea 类型的CRUD操作
	static int32_t AddWorkArea(const cbm::WorkArea & work_area);
	static bool DeleteWorkArea(const int32_t id);
	static bool UpdateWorkArea(const cbm::WorkArea & work_area);
	static void GetWorkAreaById(cbm::WorkArea & _return, const int32_t id);
	static void GetWorkAreaByForeignKey(cbm::WorkArea & _return, const std::string& fkey, const int32_t id);
	static int32_t GetWorkAreaIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetWorkAreaList(std::vector<cbm::WorkArea> & _return);
	static void GetWorkAreaIds(std::vector<int32_t> & _return);
	static void GetWorkAreaNames(std::vector<std::string> & _return);
	static void AddMoreWorkArea(const std::vector<cbm::WorkArea> & objs);
	static void DeleteMoreWorkArea(const std::vector<int32_t> & obj_ids);
	static void GetWorkAreaByFields(cbm::WorkArea & _return, const std::map<std::string, std::string> & fields);
	static void GetWorkAreaByField1(cbm::WorkArea & _return, const std::string& field, const std::string& value);
	static void GetWorkAreaByField2(cbm::WorkArea & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetWorkAreaListByFields(std::vector<cbm::WorkArea> & _return, const std::map<std::string, std::string> & fields);
	static void GetWorkAreaListByField1(std::vector<cbm::WorkArea> & _return, const std::string& field, const std::string& value);
	static void GetWorkAreaListByField2(std::vector<cbm::WorkArea> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetWorkAreaIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetWorkAreaIdByField1(const std::string& field, const std::string& value);
	static int32_t GetWorkAreaIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetWorkAreaIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetWorkAreaIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetWorkAreaIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetWorkAreaListByForeignKey(std::vector<cbm::WorkArea> & _return, const std::string& fkey, const int32_t id);
	static void GetWorkAreaIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);

	//WorkSurf 类型的CRUD操作
	static int32_t AddWorkSurf(const cbm::WorkSurf & work_surf);
	static bool DeleteWorkSurf(const int32_t id);
	static bool UpdateWorkSurf(const cbm::WorkSurf & work_surf);
	static void GetWorkSurfById(cbm::WorkSurf & _return, const int32_t id);
	static void GetWorkSurfByForeignKey(cbm::WorkSurf & _return, const std::string& fkey, const int32_t id);
	static int32_t GetWorkSurfIdByForeignKey(const std::string& fkey, const int32_t id);
	static void GetWorkSurfList(std::vector<cbm::WorkSurf> & _return);
	static void GetWorkSurfIds(std::vector<int32_t> & _return);
	static void GetWorkSurfNames(std::vector<std::string> & _return);
	static void AddMoreWorkSurf(const std::vector<cbm::WorkSurf> & objs);
	static void DeleteMoreWorkSurf(const std::vector<int32_t> & obj_ids);
	static void GetWorkSurfByFields(cbm::WorkSurf & _return, const std::map<std::string, std::string> & fields);
	static void GetWorkSurfByField1(cbm::WorkSurf & _return, const std::string& field, const std::string& value);
	static void GetWorkSurfByField2(cbm::WorkSurf & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetWorkSurfListByFields(std::vector<cbm::WorkSurf> & _return, const std::map<std::string, std::string> & fields);
	static void GetWorkSurfListByField1(std::vector<cbm::WorkSurf> & _return, const std::string& field, const std::string& value);
	static void GetWorkSurfListByField2(std::vector<cbm::WorkSurf> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static int32_t GetWorkSurfIdByFields(const std::map<std::string, std::string> & fields);
	static int32_t GetWorkSurfIdByField1(const std::string& field, const std::string& value);
	static int32_t GetWorkSurfIdByField2(const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetWorkSurfIdListByFields(std::vector<int32_t> & _return, const std::map<std::string, std::string> & fields);
	static void GetWorkSurfIdListByField1(std::vector<int32_t> & _return, const std::string& field, const std::string& value);
	static void GetWorkSurfIdListByField2(std::vector<int32_t> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2);
	static void GetWorkSurfListByForeignKey(std::vector<cbm::WorkSurf> & _return, const std::string& fkey, const int32_t id);
	static void GetWorkSurfIdListByForeignKey(std::vector<int32_t> & _return, const std::string& fkey, const int32_t id);


};
