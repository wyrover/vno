http://blog.csdn.net/cedricporter/article/details/6817988

不好使，但看起来挺高深莫测的，也许以后用到

std::string parse_python_exception(){  
	PyObject *type_ptr = NULL, *value_ptr = NULL, *traceback_ptr = NULL;  
	PyErr_Fetch(&type_ptr, &value_ptr, &traceback_ptr);  
	std::string ret("Unfetchable Python error");  
	if(type_ptr != NULL){  
		python::handle<> h_type(type_ptr);  
		python::str type_pstr(h_type);  
		python::extract<std::string> e_type_pstr(type_pstr);  
		if(e_type_pstr.check())  
			ret = e_type_pstr();  
		else  
			ret ="Unknown exception type";  
	}  
	if(value_ptr != NULL){  
		python::handle<> h_val(value_ptr);  
		python::str a(h_val);  
		python::extract<std::string> returned(a);  
		if(returned.check())  
			ret += ": " + returned();  
		else  
			ret += std::string(": Unparseable Python error: ");  
	}  
	if(traceback_ptr != NULL){  
		python::handle<> h_tb(traceback_ptr);  
		python::object tb(python::import("traceback"));  
		python::object fmt_tb(tb.attr("format_tb"));  
		python::object tb_list(fmt_tb(h_tb));  
		python::object tb_str(python::str("\n").join(tb_list));  
		python::extract<std::string> returned(tb_str);  
		if(returned.check())  
			ret +=": " + returned();  
		else  
			ret += std::string(": Unparseable Python traceback");  
	}
	return ret;  
}
